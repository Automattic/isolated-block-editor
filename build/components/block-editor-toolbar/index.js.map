{"version":3,"file":"index.js","names":["BlockEditorToolbar","props","ref","useRef","settings","editorMode","renderMoreMenu","isHugeViewport","useViewportMatch","iso","toolbar","inspector","moreMenu","inspectorInSidebar","sidebar","useDispatch","openGeneralSidebar","closeGeneralSidebar","setIsInserterOpened","useSelect","select","isEditing","isEditorSidebarOpened","isBlockSelected","getBlockSelectionStart","hasBlockSelected","isInserterOpened","toggleSidebar","isOpen","useEffect","cog","__"],"sources":["../../../src/components/block-editor-toolbar/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect, useRef } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { cog } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport MoreMenu from './more-menu';\nimport HeaderToolbar from './header-toolbar';\nimport Inspector from './inspector';\nimport ToolbarSlot from './slot';\nimport './style.scss';\n\n/** @typedef {import('../../store/editor/reducer').EditorMode} EditorMode */\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../index').OnMore} OnMore */\n\n/**\n * Block editor toolbar\n *\n * @param {Object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {EditorMode} props.editorMode - Visual or code?\n * @param {OnMore} props.renderMoreMenu - Callback to render additional items in the more menu\n */\nconst BlockEditorToolbar = ( props ) => {\n\tconst ref = useRef( null );\n\tconst { settings, editorMode, renderMoreMenu } = props;\n\tconst isHugeViewport = useViewportMatch( 'huge', '>=' );\n\tconst { inspector } = settings.iso?.toolbar || {};\n\tconst { moreMenu } = settings.iso || {};\n\tconst inspectorInSidebar = settings?.iso?.sidebar?.inspector || false;\n\tconst { openGeneralSidebar, closeGeneralSidebar } = useDispatch( 'isolated/editor' );\n\tconst { setIsInserterOpened } = useDispatch( 'isolated/editor' );\n\tconst { isEditorSidebarOpened, isBlockSelected, hasBlockSelected, isInserterOpened, isEditing } = useSelect(\n\t\t( select ) => ( {\n\t\t\tisEditing: select( 'isolated/editor' ),\n\t\t\tisEditorSidebarOpened: select( 'isolated/editor' ).isEditorSidebarOpened(),\n\t\t\tisBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t\thasBlockSelected: !! select( 'core/block-editor' ).getBlockSelectionStart(),\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tfunction toggleSidebar( isOpen ) {\n\t\tif ( ! isOpen ) {\n\t\t\tcloseGeneralSidebar();\n\t\t} else {\n\t\t\topenGeneralSidebar( hasBlockSelected ? 'edit-post/block' : 'edit-post/document' );\n\t\t}\n\t}\n\n\t// If in popover mode then ensure the sidebar is closed when the editor is first started. This is because the complimentary area status\n\t// is saved to localStorage, and it might have been left open when in sidebar mode.\n\tuseEffect( () => {\n\t\tif ( ! inspectorInSidebar ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t// Close the block inspector when no block is selected. Gutenberg gets a bit crashy otherwise\n\t\tif ( ! inspectorInSidebar && ! isEditing && ! isBlockSelected && isEditorSidebarOpened ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isEditing ] );\n\n\t// Inserter and Sidebars are mutually exclusive\n\tuseEffect( () => {\n\t\tif ( isEditorSidebarOpened && ! isHugeViewport ) {\n\t\t\tsetIsInserterOpened( false );\n\t\t}\n\t}, [ isEditorSidebarOpened, isHugeViewport ] );\n\tuseEffect( () => {\n\t\tif ( isInserterOpened && ( ! isHugeViewport || ! inspectorInSidebar ) ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isInserterOpened, isHugeViewport ] );\n\n\treturn (\n\t\t<div className=\"edit-post-editor-regions__header\" role=\"region\" tabIndex={ -1 }>\n\t\t\t<div className=\"edit-post-header\">\n\t\t\t\t<div className=\"edit-post-header__toolbar\">\n\t\t\t\t\t<HeaderToolbar settings={ settings } />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"edit-post-header__settings\" ref={ ref }>\n\t\t\t\t\t<ToolbarSlot.Slot />\n\n\t\t\t\t\t{ inspector && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={ cog }\n\t\t\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\t\t\tonClick={ () => toggleSidebar( ! isEditorSidebarOpened ) }\n\t\t\t\t\t\t\tisPressed={ isEditorSidebarOpened }\n\t\t\t\t\t\t\taria-expanded={ isEditorSidebarOpened }\n\t\t\t\t\t\t\tdisabled={ editorMode === 'text' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isEditorSidebarOpened && ! inspectorInSidebar && (\n\t\t\t\t\t\t<Inspector button={ ref } onToggle={ toggleSidebar } />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ moreMenu && (\n\t\t\t\t\t\t<MoreMenu\n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t\tonClick={ () => closeGeneralSidebar() }\n\t\t\t\t\t\t\trenderMoreMenu={ renderMoreMenu }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BlockEditorToolbar;\n"],"mappings":"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"}