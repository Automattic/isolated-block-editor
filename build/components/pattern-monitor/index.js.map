{"version":3,"file":"index.js","names":["PatternMonitor","props","currentPattern","updateBlocksWithoutUndo","previous","useRef","useEffect","current","name","setTimeout","parse","content","compose","withSelect","select","getCurrentPattern","withDispatch","dispatch"],"sources":["../../../src/components/pattern-monitor/index.js"],"sourcesContent":["// @ts-nocheck\n/**\n * WordPress dependencies\n */\n\nimport { useEffect, useRef } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { parse } from '@wordpress/blocks';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../store/editor/reducer').Pattern} Pattern */\n\n/**\n * Update callback\n *\n * @callback OnUpdate\n * @param {object[]} blocks - Editor content to save\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {Object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {Pattern} props.currentPattern - Currently selected pattern\n * @param {OnUpdate} props.updateBlocksWithoutUndo - Callback to update blocks\n */\nfunction PatternMonitor( props ) {\n\tconst { currentPattern, updateBlocksWithoutUndo } = props;\n\tconst previous = useRef( null );\n\n\t// Monitor the current pattern and update the editor content if it changes\n\tuseEffect( () => {\n\t\tif ( currentPattern === null || previous.current === currentPattern ) {\n\t\t\t// @ts-ignore\n\t\t\tprevious.current = currentPattern;\n\t\t\treturn;\n\t\t}\n\n\t\t// @ts-ignore\n\t\tprevious.current = currentPattern.name;\n\t\tsetTimeout( () => {\n\t\t\tupdateBlocksWithoutUndo( parse( currentPattern.content ) );\n\t\t}, 0 );\n\t}, [ currentPattern ] );\n\n\treturn null;\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getCurrentPattern } = select( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tcurrentPattern: getCurrentPattern(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tupdateBlocksWithoutUndo,\n\t\t};\n\t} ),\n] )( PatternMonitor );\n"],"mappings":";;;;;;AAKA;AACA;AACA;AACA;AARA;AACA;AACA;AACA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,CAAEC,KAAK,EAAG;EAChC,IAAQC,cAAc,GAA8BD,KAAK,CAAjDC,cAAc;IAAEC,uBAAuB,GAAKF,KAAK,CAAjCE,uBAAuB;EAC/C,IAAMC,QAAQ,GAAG,IAAAC,eAAM,EAAE,IAAI,CAAE;;EAE/B;EACA,IAAAC,kBAAS,EAAE,YAAM;IAChB,IAAKJ,cAAc,KAAK,IAAI,IAAIE,QAAQ,CAACG,OAAO,KAAKL,cAAc,EAAG;MACrE;MACAE,QAAQ,CAACG,OAAO,GAAGL,cAAc;MACjC;IACD;;IAEA;IACAE,QAAQ,CAACG,OAAO,GAAGL,cAAc,CAACM,IAAI;IACtCC,UAAU,CAAE,YAAM;MACjBN,uBAAuB,CAAE,IAAAO,aAAK,EAAER,cAAc,CAACS,OAAO,CAAE,CAAE;IAC3D,CAAC,EAAE,CAAC,CAAE;EACP,CAAC,EAAE,CAAET,cAAc,CAAE,CAAE;EAEvB,OAAO,IAAI;AACZ;AAAC,eAEc,IAAAU,gBAAO,EAAE,CACvB,IAAAC,gBAAU,EAAE,UAAEC,MAAM,EAAM;EACzB,cAA8BA,MAAM,CAAE,iBAAiB,CAAE;IAAjDC,iBAAiB,WAAjBA,iBAAiB;EAEzB,OAAO;IACNb,cAAc,EAAEa,iBAAiB;EAClC,CAAC;AACF,CAAC,CAAE,EACH,IAAAC,kBAAY,EAAE,UAAEC,QAAQ,EAAM;EAC7B,gBAAoCA,QAAQ,CAAE,iBAAiB,CAAE;IAAzDd,uBAAuB,aAAvBA,uBAAuB;EAE/B,OAAO;IACNA,uBAAuB,EAAvBA;EACD,CAAC;AACF,CAAC,CAAE,CACH,CAAE,CAAEH,cAAc,CAAE;AAAA"}