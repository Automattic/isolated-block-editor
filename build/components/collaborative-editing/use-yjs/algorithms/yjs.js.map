{"version":3,"file":"yjs.js","names":["updateBlocksDoc","yDocBlocks","blocks","richTextHint","clientId","has","set","yjs","Map","order","get","Array","byClientId","currentOrder","toArray","orderDiff","diff","simpleDiffArray","map","block","slice","index","remove","forEach","_clientId","insert","includes","_block","innerBlocks","isPreexisting","isEqual","richTexts","getKnownRichTextAttributes","attributeKey","updateRichText","newBlock","knownRichTextAttributes","attributeSet","Set","keys","add","newText","attributes","blockWithRichTexts","XmlText","undefined","richTextMap","oldText","richTextMapToHTML","applyHTMLDelta","updateCommentsDoc","commentsDoc","comments","comment","currentDoc","_id","isNewDoc","field","updateCommentRepliesDoc","replies","repliesDoc","reply","currentReplyDoc","updatePostDoc","doc","newPost","postDoc","getMap","title","commentsDocToArray","Object","entries","toJSON","id","commentDoc","type","content","createdAt","status","start","end","authorId","authorName","replyId","entryDoc","sort","a","b","blocksDocToArray","sanitize","richTextsAsStrings","from","reduce","acc","key","value","sanitizeHTML","postDocToObject"],"sources":["../../../../../src/components/collaborative-editing/use-yjs/algorithms/yjs.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as yjs from 'yjs';\nimport * as diff from 'lib0/diff';\nimport { isEqual } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { applyHTMLDelta, richTextMapToHTML } from './rich-text';\nimport sanitizeHTML from './sanitize-html';\n\n/**\n * @typedef {Object} PostObject\n * @property {string} title\n * @property {Object[]} blocks\n * @property {Object[]} comments\n */\n\n/** @typedef {import('../yjs-doc').RichTextHint} RichTextHint */\n\n/**\n * Updates the block doc with the local blocks block changes.\n *\n * @param {yjs.Map} yDocBlocks Blocks doc.\n * @param {Array}   blocks     Updated blocks.\n * @param {RichTextHint} [richTextHint] Indication that a certain block attribute is a RichText, inferred from the current editor selection.\n * @param {string}  clientId   Current clientId.\n */\nexport function updateBlocksDoc( yDocBlocks, blocks, richTextHint, clientId = '' ) {\n\tif ( ! yDocBlocks.has( 'order' ) ) {\n\t\tyDocBlocks.set( 'order', new yjs.Map() );\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\tif ( ! order.has( clientId ) ) order.set( clientId, new yjs.Array() );\n\torder = order.get( clientId );\n\tif ( ! yDocBlocks.has( 'byClientId' ) ) {\n\t\tyDocBlocks.set( 'byClientId', new yjs.Map() );\n\t}\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\tconst currentOrder = order.toArray();\n\tconst orderDiff = diff.simpleDiffArray(\n\t\tcurrentOrder,\n\t\tblocks.map( ( block ) => block.clientId )\n\t);\n\tcurrentOrder\n\t\t.slice( orderDiff.index, orderDiff.remove )\n\t\t.forEach( ( _clientId ) => ! orderDiff.insert.includes( _clientId ) && byClientId.delete( _clientId ) );\n\torder.delete( orderDiff.index, orderDiff.remove );\n\torder.insert( orderDiff.index, orderDiff.insert );\n\n\tif ( ! yDocBlocks.has( 'richTexts' ) ) {\n\t\tyDocBlocks.set( 'richTexts', new yjs.Map() );\n\t}\n\n\tfor ( const _block of blocks ) {\n\t\tconst { innerBlocks, ...block } = _block;\n\t\tconst isPreexisting = byClientId.has( block.clientId );\n\n\t\tif ( ! isPreexisting || ! isEqual( byClientId.get( block.clientId ), block ) ) {\n\t\t\tconst richTexts = yDocBlocks.get( 'richTexts' );\n\n\t\t\tgetKnownRichTextAttributes( block.clientId, richTextHint, richTexts ).forEach( ( attributeKey ) => {\n\t\t\t\tupdateRichText( {\n\t\t\t\t\tnewBlock: block,\n\t\t\t\t\tattributeKey,\n\t\t\t\t\trichTexts,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tbyClientId.set( block.clientId, block );\n\t\t}\n\n\t\tupdateBlocksDoc( yDocBlocks, innerBlocks, richTextHint, block.clientId );\n\t}\n}\n\n/**\n * @param clientId\n * @param richTextHint\n * @param richTexts\n * @return {Set<string>}\n */\nfunction getKnownRichTextAttributes( clientId, richTextHint, richTexts ) {\n\tconst knownRichTextAttributes = richTexts.has( clientId ) && richTexts.get( clientId );\n\tconst attributeSet = knownRichTextAttributes ? new Set( knownRichTextAttributes.keys() ) : new Set();\n\tif ( richTextHint && clientId === richTextHint.clientId ) {\n\t\tattributeSet.add( richTextHint.attributeKey );\n\t}\n\treturn attributeSet;\n}\n\n/**\n * Updates the RichText value in the richTexts yMap using index-based manipulation.\n *\n * @param {Object} args\n * @param {Object} args.newBlock\n * @param {string} args.attributeKey\n * @param {yjs.Map} args.richTexts\n */\nexport function updateRichText( { newBlock, attributeKey, richTexts } ) {\n\tconst newText = newBlock.attributes[ attributeKey ];\n\n\tif ( ! richTexts.has( newBlock.clientId ) ) {\n\t\trichTexts.set( newBlock.clientId, new yjs.Map() );\n\t}\n\tconst blockWithRichTexts = richTexts.get( newBlock.clientId );\n\tif ( ! blockWithRichTexts.has( attributeKey ) ) {\n\t\tblockWithRichTexts.set(\n\t\t\tattributeKey,\n\t\t\tnew yjs.Map( [\n\t\t\t\t[ 'xmlText', new yjs.XmlText() ],\n\t\t\t\t[ 'multilineTag', undefined ],\n\t\t\t\t[ 'replacements', new yjs.Array() ],\n\t\t\t\t[ 'multilineWrapperReplacements', new yjs.Array() ],\n\t\t\t] )\n\t\t);\n\t}\n\n\tconst richTextMap = blockWithRichTexts.get( attributeKey );\n\tconst oldText = richTextMapToHTML( blockWithRichTexts.get( attributeKey ) );\n\tapplyHTMLDelta( oldText, newText, richTextMap );\n}\n\n/**\n * Updates the comments doc with the local comments changes.\n *\n * @param {yjs.Map} commentsDoc  comments doc.\n * @param {Object[]}  comments     Updated comments.\n */\nexport function updateCommentsDoc( commentsDoc, comments = [] ) {\n\tcomments.forEach( ( comment ) => {\n\t\tlet currentDoc = commentsDoc.get( comment._id );\n\t\tconst isNewDoc = ! currentDoc;\n\t\tif ( ! currentDoc ) {\n\t\t\tcommentsDoc.set( comment._id, new yjs.Map() );\n\t\t}\n\t\tcurrentDoc = commentsDoc.get( comment._id );\n\t\t// Update regular fields\n\t\t[ 'type', 'content', 'createdAt', 'status', 'start', 'end', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentDoc.get( field ) !== comment[ field ] ) {\n\t\t\t\tcurrentDoc.set( field, comment[ field ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( isNewDoc ) {\n\t\t\tcurrentDoc.set( 'replies', new yjs.Map() );\n\t\t}\n\n\t\tupdateCommentRepliesDoc( currentDoc.get( 'replies' ), comment.replies );\n\t} );\n}\n\n/**\n * Updates the replies doc with the local replies changes.\n *\n * @param {yjs.Map} repliesDoc  replies doc.\n * @param {Object[]}  replies     Updated replies.\n */\nexport function updateCommentRepliesDoc( repliesDoc, replies = [] ) {\n\treplies.forEach( ( reply ) => {\n\t\tlet currentReplyDoc = repliesDoc.get( reply._id );\n\t\tconst isNewDoc = ! currentReplyDoc;\n\t\tif ( ! currentReplyDoc ) {\n\t\t\trepliesDoc.set( reply._id, new yjs.Map() );\n\t\t}\n\t\tcurrentReplyDoc = repliesDoc.get( reply._id );\n\t\t[ 'content', 'createdAt', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentReplyDoc.get( field ) !== reply[ field ] ) {\n\t\t\t\tcurrentReplyDoc.set( field, reply[ field ] );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Updates the post doc with the local post changes.\n *\n * @param {yjs.Doc} doc     Shared doc.\n * @param {PostObject}  newPost Updated post.\n * @param {RichTextHint} [richTextHint]\n */\nexport function updatePostDoc( doc, newPost, richTextHint ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tif ( postDoc.get( 'title' ) !== newPost.title ) {\n\t\tpostDoc.set( 'title', newPost.title );\n\t}\n\tif ( ! postDoc.get( 'blocks' ) ) {\n\t\tpostDoc.set( 'blocks', new yjs.Map() );\n\t}\n\tupdateBlocksDoc( postDoc.get( 'blocks' ), newPost.blocks || [], richTextHint );\n\tif ( ! postDoc.get( 'comments' ) ) {\n\t\tpostDoc.set( 'comments', new yjs.Map() );\n\t}\n\tupdateCommentsDoc( postDoc.get( 'comments' ), newPost.comments );\n}\n\n/**\n * Converts the comments doc into a comment list.\n *\n * @param {yjs.Map} commentsDoc Comments doc.\n * @return {Array} Comment list.\n */\nexport function commentsDocToArray( commentsDoc ) {\n\tif ( ! commentsDoc ) {\n\t\treturn [];\n\t}\n\n\treturn Object.entries( commentsDoc.toJSON() ).map( ( [ id, commentDoc ] ) => {\n\t\treturn {\n\t\t\t_id: id,\n\t\t\ttype: commentDoc.type,\n\t\t\tcontent: commentDoc.content,\n\t\t\tcreatedAt: commentDoc.createdAt,\n\t\t\tstatus: commentDoc.status,\n\t\t\tstart: commentDoc.start,\n\t\t\tend: commentDoc.end,\n\t\t\tauthorId: commentDoc.authorId,\n\t\t\tauthorName: commentDoc.authorName,\n\t\t\treplies: Object.entries( commentDoc.replies )\n\t\t\t\t.map( ( [ replyId, entryDoc ] ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: replyId,\n\t\t\t\t\t\tcontent: entryDoc.content,\n\t\t\t\t\t\tcreatedAt: entryDoc.createdAt,\n\t\t\t\t\t\tauthorId: entryDoc.authorId,\n\t\t\t\t\t\tauthorName: entryDoc.authorName,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.sort( ( a, b ) => a.createdAt - b.createdAt ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the block doc into a block list.\n *\n * @param {yjs.Map} yDocBlocks Block doc.\n * @param {Object} [opts]\n * @param {string}  [opts.clientId] Current block clientId.\n * @param {boolean}  [opts.sanitize] Whether to sanitize the block attribute values.\n *\n * @return {Array} Block list.\n */\n// @ts-ignore\nexport function blocksDocToArray( yDocBlocks, { clientId = '', sanitize = false } = {} ) {\n\tif ( ! yDocBlocks ) {\n\t\treturn [];\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\torder = order.get( clientId )?.toArray();\n\tif ( ! order ) return [];\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\n\treturn order.map( ( _clientId ) => {\n\t\tconst richTextMap = yDocBlocks.get( 'richTexts' ).get( _clientId ) || new yjs.Map();\n\t\tconst richTextsAsStrings = Array.from( richTextMap.entries() ).reduce( ( acc, [ key, value ] ) => {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[ key ]: richTextMapToHTML( value ),\n\t\t\t};\n\t\t}, {} );\n\n\t\tconst attributes = {\n\t\t\t...byClientId.get( _clientId ).attributes,\n\t\t\t...richTextsAsStrings,\n\t\t};\n\n\t\tif ( sanitize ) {\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tattributes[ key ] = sanitizeHTML( attributes[ key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...byClientId.get( _clientId ),\n\t\t\tattributes,\n\t\t\tinnerBlocks: blocksDocToArray( yDocBlocks, { clientId: _clientId, sanitize } ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the post doc into a post object.\n *\n * @param {yjs.Doc} doc Shared doc.\n * @param {Object} [opts]\n * @param {boolean} [opts.sanitize]\n *\n * @return {PostObject} Post object.\n */\n// @ts-ignore\nexport function postDocToObject( doc, { sanitize = false } = {} ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tconst blocks = blocksDocToArray( postDoc.get( 'blocks' ), { sanitize } );\n\tconst comments = commentsDocToArray( postDoc.get( 'comments' ) );\n\n\treturn {\n\t\ttitle: postDoc.get( 'title' ) || '',\n\t\tblocks,\n\t\tcomments,\n\t};\n}\n"],"mappings":"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"}