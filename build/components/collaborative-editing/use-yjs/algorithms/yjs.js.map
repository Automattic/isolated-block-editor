{"version":3,"file":"yjs.js","names":["updateBlocksDoc","yDocBlocks","blocks","richTextHint","clientId","has","set","yjs","Map","order","get","Array","byClientId","currentOrder","toArray","orderDiff","diff","simpleDiffArray","map","block","slice","index","remove","forEach","_clientId","insert","includes","_block","innerBlocks","isPreexisting","isEqual","richTexts","getKnownRichTextAttributes","attributeKey","updateRichText","newBlock","knownRichTextAttributes","attributeSet","Set","keys","add","newText","attributes","blockWithRichTexts","XmlText","undefined","richTextMap","oldText","richTextMapToHTML","applyHTMLDelta","updateCommentsDoc","commentsDoc","comments","comment","currentDoc","_id","isNewDoc","field","updateCommentRepliesDoc","replies","repliesDoc","reply","currentReplyDoc","updatePostDoc","doc","newPost","postDoc","getMap","title","commentsDocToArray","Object","entries","toJSON","id","commentDoc","type","content","createdAt","status","start","end","authorId","authorName","replyId","entryDoc","sort","a","b","blocksDocToArray","sanitize","richTextsAsStrings","from","reduce","acc","key","value","sanitizeHTML","postDocToObject"],"sources":["../../../../../src/components/collaborative-editing/use-yjs/algorithms/yjs.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as yjs from 'yjs';\nimport * as diff from 'lib0/diff';\nimport { isEqual } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { applyHTMLDelta, richTextMapToHTML } from './rich-text';\nimport sanitizeHTML from './sanitize-html';\n\n/**\n * @typedef {Object} PostObject\n * @property {string} title\n * @property {Object[]} blocks\n * @property {Object[]} comments\n */\n\n/** @typedef {import('../yjs-doc').RichTextHint} RichTextHint */\n\n/**\n * Updates the block doc with the local blocks block changes.\n *\n * @param {yjs.Map} yDocBlocks Blocks doc.\n * @param {Array}   blocks     Updated blocks.\n * @param {RichTextHint} [richTextHint] Indication that a certain block attribute is a RichText, inferred from the current editor selection.\n * @param {string}  clientId   Current clientId.\n */\nexport function updateBlocksDoc( yDocBlocks, blocks, richTextHint, clientId = '' ) {\n\tif ( ! yDocBlocks.has( 'order' ) ) {\n\t\tyDocBlocks.set( 'order', new yjs.Map() );\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\tif ( ! order.has( clientId ) ) order.set( clientId, new yjs.Array() );\n\torder = order.get( clientId );\n\tif ( ! yDocBlocks.has( 'byClientId' ) ) {\n\t\tyDocBlocks.set( 'byClientId', new yjs.Map() );\n\t}\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\tconst currentOrder = order.toArray();\n\tconst orderDiff = diff.simpleDiffArray(\n\t\tcurrentOrder,\n\t\tblocks.map( ( block ) => block.clientId )\n\t);\n\tcurrentOrder\n\t\t.slice( orderDiff.index, orderDiff.remove )\n\t\t.forEach( ( _clientId ) => ! orderDiff.insert.includes( _clientId ) && byClientId.delete( _clientId ) );\n\torder.delete( orderDiff.index, orderDiff.remove );\n\torder.insert( orderDiff.index, orderDiff.insert );\n\n\tif ( ! yDocBlocks.has( 'richTexts' ) ) {\n\t\tyDocBlocks.set( 'richTexts', new yjs.Map() );\n\t}\n\n\tfor ( const _block of blocks ) {\n\t\tconst { innerBlocks, ...block } = _block;\n\t\tconst isPreexisting = byClientId.has( block.clientId );\n\n\t\tif ( ! isPreexisting || ! isEqual( byClientId.get( block.clientId ), block ) ) {\n\t\t\tconst richTexts = yDocBlocks.get( 'richTexts' );\n\n\t\t\tgetKnownRichTextAttributes( block.clientId, richTextHint, richTexts ).forEach( ( attributeKey ) => {\n\t\t\t\tupdateRichText( {\n\t\t\t\t\tnewBlock: block,\n\t\t\t\t\tattributeKey,\n\t\t\t\t\trichTexts,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tbyClientId.set( block.clientId, block );\n\t\t}\n\n\t\tupdateBlocksDoc( yDocBlocks, innerBlocks, richTextHint, block.clientId );\n\t}\n}\n\n/**\n * @param clientId\n * @param richTextHint\n * @param richTexts\n * @return {Set<string>}\n */\nfunction getKnownRichTextAttributes( clientId, richTextHint, richTexts ) {\n\tconst knownRichTextAttributes = richTexts.has( clientId ) && richTexts.get( clientId );\n\tconst attributeSet = knownRichTextAttributes ? new Set( knownRichTextAttributes.keys() ) : new Set();\n\tif ( richTextHint && clientId === richTextHint.clientId ) {\n\t\tattributeSet.add( richTextHint.attributeKey );\n\t}\n\treturn attributeSet;\n}\n\n/**\n * Updates the RichText value in the richTexts yMap using index-based manipulation.\n *\n * @param {Object} args\n * @param {Object} args.newBlock\n * @param {string} args.attributeKey\n * @param {yjs.Map} args.richTexts\n */\nexport function updateRichText( { newBlock, attributeKey, richTexts } ) {\n\tconst newText = newBlock.attributes[ attributeKey ];\n\n\tif ( ! richTexts.has( newBlock.clientId ) ) {\n\t\trichTexts.set( newBlock.clientId, new yjs.Map() );\n\t}\n\tconst blockWithRichTexts = richTexts.get( newBlock.clientId );\n\tif ( ! blockWithRichTexts.has( attributeKey ) ) {\n\t\tblockWithRichTexts.set(\n\t\t\tattributeKey,\n\t\t\tnew yjs.Map( [\n\t\t\t\t[ 'xmlText', new yjs.XmlText() ],\n\t\t\t\t[ 'multilineTag', undefined ],\n\t\t\t\t[ 'replacements', new yjs.Array() ],\n\t\t\t\t[ 'multilineWrapperReplacements', new yjs.Array() ],\n\t\t\t] )\n\t\t);\n\t}\n\n\tconst richTextMap = blockWithRichTexts.get( attributeKey );\n\tconst oldText = richTextMapToHTML( blockWithRichTexts.get( attributeKey ) );\n\tapplyHTMLDelta( oldText, newText, richTextMap );\n}\n\n/**\n * Updates the comments doc with the local comments changes.\n *\n * @param {yjs.Map} commentsDoc  comments doc.\n * @param {Object[]}  comments     Updated comments.\n */\nexport function updateCommentsDoc( commentsDoc, comments = [] ) {\n\tcomments.forEach( ( comment ) => {\n\t\tlet currentDoc = commentsDoc.get( comment._id );\n\t\tconst isNewDoc = ! currentDoc;\n\t\tif ( ! currentDoc ) {\n\t\t\tcommentsDoc.set( comment._id, new yjs.Map() );\n\t\t}\n\t\tcurrentDoc = commentsDoc.get( comment._id );\n\t\t// Update regular fields\n\t\t[ 'type', 'content', 'createdAt', 'status', 'start', 'end', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentDoc.get( field ) !== comment[ field ] ) {\n\t\t\t\tcurrentDoc.set( field, comment[ field ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( isNewDoc ) {\n\t\t\tcurrentDoc.set( 'replies', new yjs.Map() );\n\t\t}\n\n\t\tupdateCommentRepliesDoc( currentDoc.get( 'replies' ), comment.replies );\n\t} );\n}\n\n/**\n * Updates the replies doc with the local replies changes.\n *\n * @param {yjs.Map} repliesDoc  replies doc.\n * @param {Object[]}  replies     Updated replies.\n */\nexport function updateCommentRepliesDoc( repliesDoc, replies = [] ) {\n\treplies.forEach( ( reply ) => {\n\t\tlet currentReplyDoc = repliesDoc.get( reply._id );\n\t\tconst isNewDoc = ! currentReplyDoc;\n\t\tif ( ! currentReplyDoc ) {\n\t\t\trepliesDoc.set( reply._id, new yjs.Map() );\n\t\t}\n\t\tcurrentReplyDoc = repliesDoc.get( reply._id );\n\t\t[ 'content', 'createdAt', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentReplyDoc.get( field ) !== reply[ field ] ) {\n\t\t\t\tcurrentReplyDoc.set( field, reply[ field ] );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Updates the post doc with the local post changes.\n *\n * @param {yjs.Doc} doc     Shared doc.\n * @param {PostObject}  newPost Updated post.\n * @param {RichTextHint} [richTextHint]\n */\nexport function updatePostDoc( doc, newPost, richTextHint ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tif ( postDoc.get( 'title' ) !== newPost.title ) {\n\t\tpostDoc.set( 'title', newPost.title );\n\t}\n\tif ( ! postDoc.get( 'blocks' ) ) {\n\t\tpostDoc.set( 'blocks', new yjs.Map() );\n\t}\n\tupdateBlocksDoc( postDoc.get( 'blocks' ), newPost.blocks || [], richTextHint );\n\tif ( ! postDoc.get( 'comments' ) ) {\n\t\tpostDoc.set( 'comments', new yjs.Map() );\n\t}\n\tupdateCommentsDoc( postDoc.get( 'comments' ), newPost.comments );\n}\n\n/**\n * Converts the comments doc into a comment list.\n *\n * @param {yjs.Map} commentsDoc Comments doc.\n * @return {Array} Comment list.\n */\nexport function commentsDocToArray( commentsDoc ) {\n\tif ( ! commentsDoc ) {\n\t\treturn [];\n\t}\n\n\treturn Object.entries( commentsDoc.toJSON() ).map( ( [ id, commentDoc ] ) => {\n\t\treturn {\n\t\t\t_id: id,\n\t\t\ttype: commentDoc.type,\n\t\t\tcontent: commentDoc.content,\n\t\t\tcreatedAt: commentDoc.createdAt,\n\t\t\tstatus: commentDoc.status,\n\t\t\tstart: commentDoc.start,\n\t\t\tend: commentDoc.end,\n\t\t\tauthorId: commentDoc.authorId,\n\t\t\tauthorName: commentDoc.authorName,\n\t\t\treplies: Object.entries( commentDoc.replies )\n\t\t\t\t.map( ( [ replyId, entryDoc ] ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: replyId,\n\t\t\t\t\t\tcontent: entryDoc.content,\n\t\t\t\t\t\tcreatedAt: entryDoc.createdAt,\n\t\t\t\t\t\tauthorId: entryDoc.authorId,\n\t\t\t\t\t\tauthorName: entryDoc.authorName,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.sort( ( a, b ) => a.createdAt - b.createdAt ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the block doc into a block list.\n *\n * @param {yjs.Map} yDocBlocks Block doc.\n * @param {Object} [opts]\n * @param {string}  [opts.clientId] Current block clientId.\n * @param {boolean}  [opts.sanitize] Whether to sanitize the block attribute values.\n *\n * @return {Array} Block list.\n */\n// @ts-ignore\nexport function blocksDocToArray( yDocBlocks, { clientId = '', sanitize = false } = {} ) {\n\tif ( ! yDocBlocks ) {\n\t\treturn [];\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\torder = order.get( clientId )?.toArray();\n\tif ( ! order ) return [];\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\n\treturn order.map( ( _clientId ) => {\n\t\tconst richTextMap = yDocBlocks.get( 'richTexts' ).get( _clientId ) || new yjs.Map();\n\t\tconst richTextsAsStrings = Array.from( richTextMap.entries() ).reduce( ( acc, [ key, value ] ) => {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[ key ]: richTextMapToHTML( value ),\n\t\t\t};\n\t\t}, {} );\n\n\t\tconst attributes = {\n\t\t\t...byClientId.get( _clientId ).attributes,\n\t\t\t...richTextsAsStrings,\n\t\t};\n\n\t\tif ( sanitize ) {\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tattributes[ key ] = sanitizeHTML( attributes[ key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...byClientId.get( _clientId ),\n\t\t\tattributes,\n\t\t\tinnerBlocks: blocksDocToArray( yDocBlocks, { clientId: _clientId, sanitize } ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the post doc into a post object.\n *\n * @param {yjs.Doc} doc Shared doc.\n * @param {Object} [opts]\n * @param {boolean} [opts.sanitize]\n *\n * @return {PostObject} Post object.\n */\n// @ts-ignore\nexport function postDocToObject( doc, { sanitize = false } = {} ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tconst blocks = blocksDocToArray( postDoc.get( 'blocks' ), { sanitize } );\n\tconst comments = commentsDocToArray( postDoc.get( 'comments' ) );\n\n\treturn {\n\t\ttitle: postDoc.get( 'title' ) || '',\n\t\tblocks,\n\t\tcomments,\n\t};\n}\n"],"mappings":"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"}