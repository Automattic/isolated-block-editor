{"version":3,"file":"yjs.js","names":["yjs","_interopRequireWildcard","require","diff","_lodash","_richText","_sanitizeHtml","_interopRequireDefault","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","arr","len","arr2","updateBlocksDoc","yDocBlocks","blocks","richTextHint","clientId","undefined","Map","order","byClientId","currentOrder","toArray","orderDiff","simpleDiffArray","map","block","index","remove","_clientId","insert","includes","_iterator","_step","_loop","_block","innerBlocks","_objectWithoutProperties2","isPreexisting","isEqual","richTexts","getKnownRichTextAttributes","attributeKey","updateRichText","newBlock","knownRichTextAttributes","attributeSet","Set","add","_ref","newText","attributes","blockWithRichTexts","XmlText","richTextMap","oldText","richTextMapToHTML","applyHTMLDelta","updateCommentsDoc","commentsDoc","comments","comment","currentDoc","_id","isNewDoc","field","updateCommentRepliesDoc","replies","repliesDoc","reply","currentReplyDoc","updatePostDoc","doc","newPost","postDoc","getMap","title","commentsDocToArray","entries","toJSON","_ref2","_ref3","_slicedToArray2","id","commentDoc","type","content","createdAt","status","start","end","authorId","authorName","_ref4","_ref5","replyId","entryDoc","sort","a","b","blocksDocToArray","_order$get","_ref6","_ref6$clientId","_ref6$sanitize","sanitize","richTextsAsStrings","reduce","acc","_ref7","_ref8","sanitizeHTML","postDocToObject","_ref9","_ref9$sanitize"],"sources":["../../../../../src/components/collaborative-editing/use-yjs/algorithms/yjs.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as yjs from 'yjs';\nimport * as diff from 'lib0/diff';\nimport { isEqual } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { applyHTMLDelta, richTextMapToHTML } from './rich-text';\nimport sanitizeHTML from './sanitize-html';\n\n/**\n * @typedef {Object} PostObject\n * @property {string} title\n * @property {Object[]} blocks\n * @property {Object[]} comments\n */\n\n/** @typedef {import('../yjs-doc').RichTextHint} RichTextHint */\n\n/**\n * Updates the block doc with the local blocks block changes.\n *\n * @param {yjs.Map} yDocBlocks Blocks doc.\n * @param {Array}   blocks     Updated blocks.\n * @param {RichTextHint} [richTextHint] Indication that a certain block attribute is a RichText, inferred from the current editor selection.\n * @param {string}  clientId   Current clientId.\n */\nexport function updateBlocksDoc( yDocBlocks, blocks, richTextHint, clientId = '' ) {\n\tif ( ! yDocBlocks.has( 'order' ) ) {\n\t\tyDocBlocks.set( 'order', new yjs.Map() );\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\tif ( ! order.has( clientId ) ) order.set( clientId, new yjs.Array() );\n\torder = order.get( clientId );\n\tif ( ! yDocBlocks.has( 'byClientId' ) ) {\n\t\tyDocBlocks.set( 'byClientId', new yjs.Map() );\n\t}\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\tconst currentOrder = order.toArray();\n\tconst orderDiff = diff.simpleDiffArray(\n\t\tcurrentOrder,\n\t\tblocks.map( ( block ) => block.clientId )\n\t);\n\tcurrentOrder\n\t\t.slice( orderDiff.index, orderDiff.remove )\n\t\t.forEach( ( _clientId ) => ! orderDiff.insert.includes( _clientId ) && byClientId.delete( _clientId ) );\n\torder.delete( orderDiff.index, orderDiff.remove );\n\torder.insert( orderDiff.index, orderDiff.insert );\n\n\tif ( ! yDocBlocks.has( 'richTexts' ) ) {\n\t\tyDocBlocks.set( 'richTexts', new yjs.Map() );\n\t}\n\n\tfor ( const _block of blocks ) {\n\t\tconst { innerBlocks, ...block } = _block;\n\t\tconst isPreexisting = byClientId.has( block.clientId );\n\n\t\tif ( ! isPreexisting || ! isEqual( byClientId.get( block.clientId ), block ) ) {\n\t\t\tconst richTexts = yDocBlocks.get( 'richTexts' );\n\n\t\t\tgetKnownRichTextAttributes( block.clientId, richTextHint, richTexts ).forEach( ( attributeKey ) => {\n\t\t\t\tupdateRichText( {\n\t\t\t\t\tnewBlock: block,\n\t\t\t\t\tattributeKey,\n\t\t\t\t\trichTexts,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tbyClientId.set( block.clientId, block );\n\t\t}\n\n\t\tupdateBlocksDoc( yDocBlocks, innerBlocks, richTextHint, block.clientId );\n\t}\n}\n\n/**\n * @param clientId\n * @param richTextHint\n * @param richTexts\n * @return {Set<string>}\n */\nfunction getKnownRichTextAttributes( clientId, richTextHint, richTexts ) {\n\tconst knownRichTextAttributes = richTexts.has( clientId ) && richTexts.get( clientId );\n\tconst attributeSet = knownRichTextAttributes ? new Set( knownRichTextAttributes.keys() ) : new Set();\n\tif ( richTextHint && clientId === richTextHint.clientId ) {\n\t\tattributeSet.add( richTextHint.attributeKey );\n\t}\n\treturn attributeSet;\n}\n\n/**\n * Updates the RichText value in the richTexts yMap using index-based manipulation.\n *\n * @param {Object} args\n * @param {Object} args.newBlock\n * @param {string} args.attributeKey\n * @param {yjs.Map} args.richTexts\n */\nexport function updateRichText( { newBlock, attributeKey, richTexts } ) {\n\tconst newText = newBlock.attributes[ attributeKey ];\n\n\tif ( ! richTexts.has( newBlock.clientId ) ) {\n\t\trichTexts.set( newBlock.clientId, new yjs.Map() );\n\t}\n\tconst blockWithRichTexts = richTexts.get( newBlock.clientId );\n\tif ( ! blockWithRichTexts.has( attributeKey ) ) {\n\t\tblockWithRichTexts.set(\n\t\t\tattributeKey,\n\t\t\tnew yjs.Map( [\n\t\t\t\t[ 'xmlText', new yjs.XmlText() ],\n\t\t\t\t[ 'multilineTag', undefined ],\n\t\t\t\t[ 'replacements', new yjs.Array() ],\n\t\t\t\t[ 'multilineWrapperReplacements', new yjs.Array() ],\n\t\t\t] )\n\t\t);\n\t}\n\n\tconst richTextMap = blockWithRichTexts.get( attributeKey );\n\tconst oldText = richTextMapToHTML( blockWithRichTexts.get( attributeKey ) );\n\tapplyHTMLDelta( oldText, newText, richTextMap );\n}\n\n/**\n * Updates the comments doc with the local comments changes.\n *\n * @param {yjs.Map} commentsDoc  comments doc.\n * @param {Object[]}  comments     Updated comments.\n */\nexport function updateCommentsDoc( commentsDoc, comments = [] ) {\n\tcomments.forEach( ( comment ) => {\n\t\tlet currentDoc = commentsDoc.get( comment._id );\n\t\tconst isNewDoc = ! currentDoc;\n\t\tif ( ! currentDoc ) {\n\t\t\tcommentsDoc.set( comment._id, new yjs.Map() );\n\t\t}\n\t\tcurrentDoc = commentsDoc.get( comment._id );\n\t\t// Update regular fields\n\t\t[ 'type', 'content', 'createdAt', 'status', 'start', 'end', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentDoc.get( field ) !== comment[ field ] ) {\n\t\t\t\tcurrentDoc.set( field, comment[ field ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( isNewDoc ) {\n\t\t\tcurrentDoc.set( 'replies', new yjs.Map() );\n\t\t}\n\n\t\tupdateCommentRepliesDoc( currentDoc.get( 'replies' ), comment.replies );\n\t} );\n}\n\n/**\n * Updates the replies doc with the local replies changes.\n *\n * @param {yjs.Map} repliesDoc  replies doc.\n * @param {Object[]}  replies     Updated replies.\n */\nexport function updateCommentRepliesDoc( repliesDoc, replies = [] ) {\n\treplies.forEach( ( reply ) => {\n\t\tlet currentReplyDoc = repliesDoc.get( reply._id );\n\t\tconst isNewDoc = ! currentReplyDoc;\n\t\tif ( ! currentReplyDoc ) {\n\t\t\trepliesDoc.set( reply._id, new yjs.Map() );\n\t\t}\n\t\tcurrentReplyDoc = repliesDoc.get( reply._id );\n\t\t[ 'content', 'createdAt', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentReplyDoc.get( field ) !== reply[ field ] ) {\n\t\t\t\tcurrentReplyDoc.set( field, reply[ field ] );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Updates the post doc with the local post changes.\n *\n * @param {yjs.Doc} doc     Shared doc.\n * @param {PostObject}  newPost Updated post.\n * @param {RichTextHint} [richTextHint]\n */\nexport function updatePostDoc( doc, newPost, richTextHint ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tif ( postDoc.get( 'title' ) !== newPost.title ) {\n\t\tpostDoc.set( 'title', newPost.title );\n\t}\n\tif ( ! postDoc.get( 'blocks' ) ) {\n\t\tpostDoc.set( 'blocks', new yjs.Map() );\n\t}\n\tupdateBlocksDoc( postDoc.get( 'blocks' ), newPost.blocks || [], richTextHint );\n\tif ( ! postDoc.get( 'comments' ) ) {\n\t\tpostDoc.set( 'comments', new yjs.Map() );\n\t}\n\tupdateCommentsDoc( postDoc.get( 'comments' ), newPost.comments );\n}\n\n/**\n * Converts the comments doc into a comment list.\n *\n * @param {yjs.Map} commentsDoc Comments doc.\n * @return {Array} Comment list.\n */\nexport function commentsDocToArray( commentsDoc ) {\n\tif ( ! commentsDoc ) {\n\t\treturn [];\n\t}\n\n\treturn Object.entries( commentsDoc.toJSON() ).map( ( [ id, commentDoc ] ) => {\n\t\treturn {\n\t\t\t_id: id,\n\t\t\ttype: commentDoc.type,\n\t\t\tcontent: commentDoc.content,\n\t\t\tcreatedAt: commentDoc.createdAt,\n\t\t\tstatus: commentDoc.status,\n\t\t\tstart: commentDoc.start,\n\t\t\tend: commentDoc.end,\n\t\t\tauthorId: commentDoc.authorId,\n\t\t\tauthorName: commentDoc.authorName,\n\t\t\treplies: Object.entries( commentDoc.replies )\n\t\t\t\t.map( ( [ replyId, entryDoc ] ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: replyId,\n\t\t\t\t\t\tcontent: entryDoc.content,\n\t\t\t\t\t\tcreatedAt: entryDoc.createdAt,\n\t\t\t\t\t\tauthorId: entryDoc.authorId,\n\t\t\t\t\t\tauthorName: entryDoc.authorName,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.sort( ( a, b ) => a.createdAt - b.createdAt ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the block doc into a block list.\n *\n * @param {yjs.Map} yDocBlocks Block doc.\n * @param {Object} [opts]\n * @param {string}  [opts.clientId] Current block clientId.\n * @param {boolean}  [opts.sanitize] Whether to sanitize the block attribute values.\n *\n * @return {Array} Block list.\n */\n// @ts-ignore\nexport function blocksDocToArray( yDocBlocks, { clientId = '', sanitize = false } = {} ) {\n\tif ( ! yDocBlocks ) {\n\t\treturn [];\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\torder = order.get( clientId )?.toArray();\n\tif ( ! order ) return [];\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\n\treturn order.map( ( _clientId ) => {\n\t\tconst richTextMap = yDocBlocks.get( 'richTexts' ).get( _clientId ) || new yjs.Map();\n\t\tconst richTextsAsStrings = Array.from( richTextMap.entries() ).reduce( ( acc, [ key, value ] ) => {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[ key ]: richTextMapToHTML( value ),\n\t\t\t};\n\t\t}, {} );\n\n\t\tconst attributes = {\n\t\t\t...byClientId.get( _clientId ).attributes,\n\t\t\t...richTextsAsStrings,\n\t\t};\n\n\t\tif ( sanitize ) {\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tattributes[ key ] = sanitizeHTML( attributes[ key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...byClientId.get( _clientId ),\n\t\t\tattributes,\n\t\t\tinnerBlocks: blocksDocToArray( yDocBlocks, { clientId: _clientId, sanitize } ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the post doc into a post object.\n *\n * @param {yjs.Doc} doc Shared doc.\n * @param {Object} [opts]\n * @param {boolean} [opts.sanitize]\n *\n * @return {PostObject} Post object.\n */\n// @ts-ignore\nexport function postDocToObject( doc, { sanitize = false } = {} ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tconst blocks = blocksDocToArray( postDoc.get( 'blocks' ), { sanitize } );\n\tconst comments = commentsDocToArray( postDoc.get( 'comments' ) );\n\n\treturn {\n\t\ttitle: postDoc.get( 'title' ) || '',\n\t\tblocks,\n\t\tcomments,\n\t};\n}\n"],"mappings":"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"}