{"version":3,"file":"index.js","names":["_memize","_interopRequireDefault","require","_classnames","_richText","_colorUtils","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","FORMAT_NAME","exports","applyCarets","record","multiline","carets","arguments","undefined","forEach","caret","_pop","_lastGrapheme$length","start","end","id","color","label","isCollapsed","_multiline$checkOffse","checkOffset","isAtMultilineItemEnd","multilineItemText","isShifted","isMultiline","text","lastGrapheme","Intl","Segmenter","_toConsumableArray2","segment","pop","offset","applyFormat","type","attributes","classnames","title","style","concat","shouldUseWhiteText","join","getCarets","memoize","peers","richTextIdentifier","blockClientId","entries","filter","_ref","_peer$start","_peer$end","_ref2","_slicedToArray2","peer","clientId","attributeKey","map","_ref3","_ref4","getMultilineData","multilineTag","attributeValue","_create","_create$text","_create$text$split","multilineItems","create","html","split","__UNSTABLE_LINE_SEPARATOR","count","_iterator","_step","itemText","getStableBlockAttributeSelector","getBlockAttributes","settings","tagName","className","edit","__experimentalGetPropsForEditableTreePreparation","select","_ref5","_MULTILINE_ATTRIBUTES","_MULTILINE_ATTRIBUTES2","MULTILINE_ATTRIBUTES","values","blockName","getBlockName","getCollabPeers","blockAttributeSelector","__experimentalCreatePrepareEditableTree","_ref6","formats","registerFormatCollabCaret","registerFormatType"],"sources":["../../../../../../src/components/collaborative-editing/use-yjs/formats/collab-caret/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { applyFormat, create, registerFormatType, __UNSTABLE_LINE_SEPARATOR } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { shouldUseWhiteText } from './color-utils';\nimport './style.scss';\n\n/**\n * @typedef MultilineData\n * @property {boolean} isMultiline - Whether this is a multiline attribute.\n * @property {(offset: number) => {isAtMultilineItemEnd: boolean, multilineItemText?: string}} checkOffset - Determine whether a given caret index is at the end of a multiline segment.\n */\n\nexport const FORMAT_NAME = 'isolated/collab-caret';\n\n/**\n * Applies given carets to the given record.\n *\n * @param {Object} record The record to apply carets to.\n * @param {MultilineData} multiline\n * @param {Array} carets The carets to apply.\n * @return {Object} A record with the carets applied.\n */\nexport function applyCarets( record, multiline, carets = [] ) {\n\tcarets.forEach( ( caret ) => {\n\t\tlet { start, end, id, color, label } = caret;\n\t\tconst isCollapsed = start === end;\n\t\tconst { isAtMultilineItemEnd, multilineItemText } = multiline.checkOffset( end );\n\t\tconst isShifted = isCollapsed && ( multiline.isMultiline ? isAtMultilineItemEnd : end >= record.text.length );\n\n\t\tconst text = isAtMultilineItemEnd ? multilineItemText : record.text;\n\n\t\t// Try to accurately get the `length` of the last character (i.e. grapheme) in case\n\t\t// the last character is an emoji, where \"<emoji>\".length can be more than 1.\n\t\t// For example, \"👩‍👩‍👧‍👦\".length === 11. (Intl.Segementer is still unsupported in Firefox)\n\t\t// @ts-ignore Intl.Segmenter is not in spec yet\n\t\tconst lastGrapheme = Intl.Segmenter\n\t\t\t? // @ts-ignore Intl.Segmenter is not in spec yet\n\t\t\t  [ ...new Intl.Segmenter().segment( text ) ].pop()?.segment\n\t\t\t: undefined;\n\t\tconst offset = lastGrapheme?.length ?? 1; // fall back to 1 if we can't accurately segment the last grapheme\n\n\t\tif ( isShifted ) {\n\t\t\tstart = end - offset;\n\t\t}\n\n\t\tif ( isCollapsed ) {\n\t\t\tend = start + offset;\n\t\t}\n\n\t\trecord = applyFormat(\n\t\t\trecord,\n\t\t\t{\n\t\t\t\ttype: FORMAT_NAME,\n\t\t\t\tattributes: {\n\t\t\t\t\tid: 'iso-editor-collab-caret-' + id,\n\t\t\t\t\tclass: classnames( {\n\t\t\t\t\t\t'is-collapsed': isCollapsed,\n\t\t\t\t\t\t'is-shifted': isShifted,\n\t\t\t\t\t} ),\n\t\t\t\t\ttitle: label,\n\t\t\t\t\tstyle: [\n\t\t\t\t\t\t`--iso-editor-collab-caret-color: ${ color || '#2e3d48' };`,\n\t\t\t\t\t\t`--iso-editor-collab-caret-label-text-color: ${\n\t\t\t\t\t\t\tshouldUseWhiteText( color ) ? '#fff' : '#1e1e1e'\n\t\t\t\t\t\t};`,\n\t\t\t\t\t].join( ' ' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstart,\n\t\t\tend\n\t\t);\n\t} );\n\n\treturn record;\n}\n\nconst getCarets = memoize( ( peers, richTextIdentifier, blockClientId ) => {\n\treturn Object.entries( peers )\n\t\t.filter( ( [ , peer ] ) => {\n\t\t\treturn (\n\t\t\t\tpeer?.start?.clientId === blockClientId &&\n\t\t\t\tpeer?.end?.clientId === blockClientId &&\n\t\t\t\tpeer.start.attributeKey === richTextIdentifier\n\t\t\t);\n\t\t} )\n\t\t.map( ( [ id, peer ] ) => ( {\n\t\t\tid,\n\t\t\tlabel: peer.name,\n\t\t\tstart: peer.start.offset,\n\t\t\tend: peer.end.offset,\n\t\t\tcolor: peer.color,\n\t\t} ) );\n} );\n\n/**\n * @param {string} multilineTag\n * @param {string} attributeValue\n * @return {MultilineData}\n */\nconst getMultilineData = ( multilineTag, attributeValue ) => {\n\tconst multilineItems = multilineTag\n\t\t? create( { html: attributeValue, multilineTag } )?.text?.split?.( __UNSTABLE_LINE_SEPARATOR )\n\t\t: [];\n\n\treturn {\n\t\tisMultiline: !! multilineTag,\n\t\tcheckOffset: ( offset ) => {\n\t\t\tlet count = 0;\n\t\t\tfor ( const itemText of multilineItems ) {\n\t\t\t\tcount += itemText.length;\n\t\t\t\tif ( offset === count ) {\n\t\t\t\t\treturn { isAtMultilineItemEnd: true, multilineItemText: itemText };\n\t\t\t\t}\n\t\t\t\tcount += 1; // line separator character\n\t\t\t}\n\t\t\treturn { isAtMultilineItemEnd: false };\n\t\t},\n\t};\n};\n\nconst getStableBlockAttributeSelector = memoize( ( getBlockAttributes, blockClientId, attributeKey ) => () =>\n\tgetBlockAttributes( blockClientId )[ attributeKey ]\n);\n\nexport const settings = {\n\ttitle: 'Collaboration peer caret',\n\ttagName: 'mark',\n\tclassName: 'iso-editor-collab-caret',\n\tattributes: {\n\t\tid: 'id',\n\t\tclassName: 'class',\n\t},\n\tedit() {\n\t\treturn null;\n\t},\n\t__experimentalGetPropsForEditableTreePreparation( select, { richTextIdentifier, blockClientId } ) {\n\t\t// Adds special handling for certain block attributes that are known to be multiline,\n\t\t// e.g. the `values` attribute of the List block.\n\t\tconst MULTILINE_ATTRIBUTES = {\n\t\t\t'core/list': { values: { multilineTag: 'li' } },\n\t\t};\n\n\t\tconst blockName = select( 'core/block-editor' ).getBlockName( blockClientId );\n\t\tconst multilineTag = MULTILINE_ATTRIBUTES[ blockName ]?.[ richTextIdentifier ]?.multilineTag;\n\n\t\t// The properties in this return object need to be as stable as possible.\n\t\t// See https://github.com/WordPress/gutenberg/issues/23428\n\t\treturn {\n\t\t\tcarets: getCarets( select( 'isolated/editor' ).getCollabPeers(), richTextIdentifier, blockClientId ),\n\t\t\tmultilineTag,\n\t\t\tblockAttributeSelector: getStableBlockAttributeSelector(\n\t\t\t\tselect( 'core/block-editor' ).getBlockAttributes,\n\t\t\t\tblockClientId,\n\t\t\t\trichTextIdentifier\n\t\t\t),\n\t\t};\n\t},\n\t__experimentalCreatePrepareEditableTree( { carets, multilineTag, blockAttributeSelector } ) {\n\t\treturn ( formats, text ) => {\n\t\t\tif ( ! carets?.length ) {\n\t\t\t\treturn formats;\n\t\t\t}\n\n\t\t\tconst multiline = getMultilineData( multilineTag, blockAttributeSelector() );\n\t\t\tconst record = applyCarets( { formats, text }, multiline, carets );\n\n\t\t\treturn record.formats;\n\t\t};\n\t},\n};\n\nexport const registerFormatCollabCaret = () => {\n\tregisterFormatType( FORMAT_NAME, settings );\n};\n"],"mappings":"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"}