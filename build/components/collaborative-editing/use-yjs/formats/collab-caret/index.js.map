{"version":3,"file":"index.js","names":["FORMAT_NAME","applyCarets","record","multiline","carets","forEach","caret","start","end","id","color","label","isCollapsed","checkOffset","isAtMultilineItemEnd","multilineItemText","isShifted","isMultiline","text","length","lastGrapheme","Intl","Segmenter","segment","pop","undefined","offset","applyFormat","type","attributes","classnames","title","style","shouldUseWhiteText","join","getCarets","memoize","peers","richTextIdentifier","blockClientId","Object","entries","filter","peer","clientId","attributeKey","map","name","getMultilineData","multilineTag","attributeValue","multilineItems","create","html","split","__UNSTABLE_LINE_SEPARATOR","count","itemText","getStableBlockAttributeSelector","getBlockAttributes","settings","tagName","className","edit","__experimentalGetPropsForEditableTreePreparation","select","MULTILINE_ATTRIBUTES","values","blockName","getBlockName","getCollabPeers","blockAttributeSelector","__experimentalCreatePrepareEditableTree","formats","registerFormatCollabCaret","registerFormatType"],"sources":["../../../../../../src/components/collaborative-editing/use-yjs/formats/collab-caret/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { applyFormat, create, registerFormatType, __UNSTABLE_LINE_SEPARATOR } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { shouldUseWhiteText } from './color-utils';\nimport './style.scss';\n\n/**\n * @typedef MultilineData\n * @property {boolean} isMultiline - Whether this is a multiline attribute.\n * @property {(offset: number) => {isAtMultilineItemEnd: boolean, multilineItemText?: string}} checkOffset - Determine whether a given caret index is at the end of a multiline segment.\n */\n\nexport const FORMAT_NAME = 'isolated/collab-caret';\n\n/**\n * Applies given carets to the given record.\n *\n * @param {Object} record The record to apply carets to.\n * @param {MultilineData} multiline\n * @param {Array} carets The carets to apply.\n * @return {Object} A record with the carets applied.\n */\nexport function applyCarets( record, multiline, carets = [] ) {\n\tcarets.forEach( ( caret ) => {\n\t\tlet { start, end, id, color, label } = caret;\n\t\tconst isCollapsed = start === end;\n\t\tconst { isAtMultilineItemEnd, multilineItemText } = multiline.checkOffset( end );\n\t\tconst isShifted = isCollapsed && ( multiline.isMultiline ? isAtMultilineItemEnd : end >= record.text.length );\n\n\t\tconst text = isAtMultilineItemEnd ? multilineItemText : record.text;\n\n\t\t// Try to accurately get the `length` of the last character (i.e. grapheme) in case\n\t\t// the last character is an emoji, where \"<emoji>\".length can be more than 1.\n\t\t// For example, \"👩‍👩‍👧‍👦\".length === 11. (Intl.Segementer is still unsupported in Firefox)\n\t\t// @ts-ignore Intl.Segmenter is not in spec yet\n\t\tconst lastGrapheme = Intl.Segmenter\n\t\t\t? // @ts-ignore Intl.Segmenter is not in spec yet\n\t\t\t  [ ...new Intl.Segmenter().segment( text ) ].pop()?.segment\n\t\t\t: undefined;\n\t\tconst offset = lastGrapheme?.length ?? 1; // fall back to 1 if we can't accurately segment the last grapheme\n\n\t\tif ( isShifted ) {\n\t\t\tstart = end - offset;\n\t\t}\n\n\t\tif ( isCollapsed ) {\n\t\t\tend = start + offset;\n\t\t}\n\n\t\trecord = applyFormat(\n\t\t\trecord,\n\t\t\t{\n\t\t\t\ttype: FORMAT_NAME,\n\t\t\t\tattributes: {\n\t\t\t\t\tid: 'iso-editor-collab-caret-' + id,\n\t\t\t\t\tclass: classnames( {\n\t\t\t\t\t\t'is-collapsed': isCollapsed,\n\t\t\t\t\t\t'is-shifted': isShifted,\n\t\t\t\t\t} ),\n\t\t\t\t\ttitle: label,\n\t\t\t\t\tstyle: [\n\t\t\t\t\t\t`--iso-editor-collab-caret-color: ${ color || '#2e3d48' };`,\n\t\t\t\t\t\t`--iso-editor-collab-caret-label-text-color: ${\n\t\t\t\t\t\t\tshouldUseWhiteText( color ) ? '#fff' : '#1e1e1e'\n\t\t\t\t\t\t};`,\n\t\t\t\t\t].join( ' ' ),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstart,\n\t\t\tend\n\t\t);\n\t} );\n\n\treturn record;\n}\n\nconst getCarets = memoize( ( peers, richTextIdentifier, blockClientId ) => {\n\treturn Object.entries( peers )\n\t\t.filter( ( [ , peer ] ) => {\n\t\t\treturn (\n\t\t\t\tpeer?.start?.clientId === blockClientId &&\n\t\t\t\tpeer?.end?.clientId === blockClientId &&\n\t\t\t\tpeer.start.attributeKey === richTextIdentifier\n\t\t\t);\n\t\t} )\n\t\t.map( ( [ id, peer ] ) => ( {\n\t\t\tid,\n\t\t\tlabel: peer.name,\n\t\t\tstart: peer.start.offset,\n\t\t\tend: peer.end.offset,\n\t\t\tcolor: peer.color,\n\t\t} ) );\n} );\n\n/**\n * @param {string} multilineTag\n * @param {string} attributeValue\n * @return {MultilineData}\n */\nconst getMultilineData = ( multilineTag, attributeValue ) => {\n\tconst multilineItems = multilineTag\n\t\t? create( { html: attributeValue, multilineTag } )?.text?.split?.( __UNSTABLE_LINE_SEPARATOR )\n\t\t: [];\n\n\treturn {\n\t\tisMultiline: !! multilineTag,\n\t\tcheckOffset: ( offset ) => {\n\t\t\tlet count = 0;\n\t\t\tfor ( const itemText of multilineItems ) {\n\t\t\t\tcount += itemText.length;\n\t\t\t\tif ( offset === count ) {\n\t\t\t\t\treturn { isAtMultilineItemEnd: true, multilineItemText: itemText };\n\t\t\t\t}\n\t\t\t\tcount += 1; // line separator character\n\t\t\t}\n\t\t\treturn { isAtMultilineItemEnd: false };\n\t\t},\n\t};\n};\n\nconst getStableBlockAttributeSelector = memoize( ( getBlockAttributes, blockClientId, attributeKey ) => () =>\n\tgetBlockAttributes( blockClientId )[ attributeKey ]\n);\n\nexport const settings = {\n\ttitle: 'Collaboration peer caret',\n\ttagName: 'mark',\n\tclassName: 'iso-editor-collab-caret',\n\tattributes: {\n\t\tid: 'id',\n\t\tclassName: 'class',\n\t},\n\tedit() {\n\t\treturn null;\n\t},\n\t__experimentalGetPropsForEditableTreePreparation( select, { richTextIdentifier, blockClientId } ) {\n\t\t// Adds special handling for certain block attributes that are known to be multiline,\n\t\t// e.g. the `values` attribute of the List block.\n\t\tconst MULTILINE_ATTRIBUTES = {\n\t\t\t'core/list': { values: { multilineTag: 'li' } },\n\t\t};\n\n\t\tconst blockName = select( 'core/block-editor' ).getBlockName( blockClientId );\n\t\tconst multilineTag = MULTILINE_ATTRIBUTES[ blockName ]?.[ richTextIdentifier ]?.multilineTag;\n\n\t\t// The properties in this return object need to be as stable as possible.\n\t\t// See https://github.com/WordPress/gutenberg/issues/23428\n\t\treturn {\n\t\t\tcarets: getCarets( select( 'isolated/editor' ).getCollabPeers(), richTextIdentifier, blockClientId ),\n\t\t\tmultilineTag,\n\t\t\tblockAttributeSelector: getStableBlockAttributeSelector(\n\t\t\t\tselect( 'core/block-editor' ).getBlockAttributes,\n\t\t\t\tblockClientId,\n\t\t\t\trichTextIdentifier\n\t\t\t),\n\t\t};\n\t},\n\t__experimentalCreatePrepareEditableTree( { carets, multilineTag, blockAttributeSelector } ) {\n\t\treturn ( formats, text ) => {\n\t\t\tif ( ! carets?.length ) {\n\t\t\t\treturn formats;\n\t\t\t}\n\n\t\t\tconst multiline = getMultilineData( multilineTag, blockAttributeSelector() );\n\t\t\tconst record = applyCarets( { formats, text }, multiline, carets );\n\n\t\t\treturn record.formats;\n\t\t};\n\t},\n};\n\nexport const registerFormatCollabCaret = () => {\n\tregisterFormatType( FORMAT_NAME, settings );\n};\n"],"mappings":"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"}