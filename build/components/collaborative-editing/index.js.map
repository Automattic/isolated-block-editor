{"version":3,"file":"index.js","names":["CollaborativeEditing","settings","useYjs"],"sources":["../../../src/components/collaborative-editing/index.js"],"sourcesContent":["// @ts-nocheck\n/**\n * Internal dependencies\n */\nimport { ToolbarSlot } from '../..';\nimport useYjs from './use-yjs';\nimport CollaborativeEditingAvatars from './components/avatars';\n\n/**\n * Real-time collaboration settings\n *\n * @typedef CollaborationSettings\n * @property {boolean} enabled\n * @property {string} [channelId] Optional channel id to pass to transport.connect().\n * @property {string} username Name displayed to peers. Required if collab is enabled.\n * @property {string} [caretColor] Color of the caret indicator displayed to peers. If unspecified, a random color will be selected.\n * @property {string} [avatarUrl] Url of the avatar image diplayed to peers.\n * @property {CollaborationTransport} transport Required if collab is enabled.\n */\n\n/**\n * Transport module for real-time collaboration\n *\n * @typedef CollaborationTransport\n * @property {(message: CollaborationTransportMessage) => void} sendMessage\n * @property {(options: CollaborationTransportConnectOpts) => Promise<{isFirstInChannel: boolean}>} connect\n * @property {() => Promise<void>} disconnect\n */\n\n/**\n * @typedef CollaborationTransportConnectOpts\n * @property {Object} user\n * @property {string} user.identity\n * @property {string} user.name\n * @property {string} [user.avatarUrl]\n * @property {string} [user.color] Color of the caret indicator displayed to peers.\n * @property {(message: object) => void} onReceiveMessage Callback to run when a message is received.\n * @property {(peers: AvailablePeer[]) => void} setAvailablePeers Callback to run when peers change.\n * @property {string} [channelId]\n */\n\n/**\n * @typedef AvailablePeer\n * @property {string} id\n * @property {string} name\n * @property {string} color\n * @property {string} [avatarUrl]\n */\n\n/**\n * @typedef CollaborationTransportDocMessage\n * @property {string} identity\n * @property {'doc'} type\n * @property {Object} message\n */\n\n/**\n * @typedef CollaborationTransportSelectionMessage\n * @property {string} identity\n * @property {'selection'} type\n * @property {EditorSelection} selection\n */\n\n/**\n * @typedef {CollaborationTransportDocMessage|CollaborationTransportSelectionMessage} CollaborationTransportMessage\n */\n\n/**\n * @typedef EditorSelection\n * @property {Object} start\n * @property {Object} end\n */\n\n/**\n * @typedef RichTextHint\n * @property {string} clientId\n * @property {string} attributeKey\n */\n\n/**\n * @param {Object} props\n * @param {CollaborationSettings} props.settings\n */\nfunction CollaborativeEditing( { settings } ) {\n\tuseYjs( {\n\t\tsettings,\n\t} );\n\n\treturn (\n\t\t<ToolbarSlot>\n\t\t\t<CollaborativeEditingAvatars />\n\t\t</ToolbarSlot>\n\t);\n}\n\nexport default CollaborativeEditing;\n"],"mappings":";;;;;;;AAIA;AACA;AACA;AAA+D;AAN/D;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,OAAiB;EAAA,IAAbC,QAAQ,QAARA,QAAQ;EACxC,IAAAC,kBAAM,EAAE;IACPD,QAAQ,EAARA;EACD,CAAC,CAAE;EAEH,OACC,cAAC,aAAW,QACX,cAAC,mBAA2B,OAAG,CAClB;AAEhB;AAAC,eAEcD,oBAAoB;AAAA"}