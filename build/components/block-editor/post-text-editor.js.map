{"version":3,"file":"post-text-editor.js","names":["PostTextEditor","props","edit","bind","stopEditing","state","event","value","target","onChange","setState","isDirty","onPersist","instanceId","__","Component","compose","withSelect","select","getBlocks","serialize","withDispatch","dispatch","updateBlocksWithoutUndo","content","blocks","parse","withInstanceId"],"sources":["../../../src/components/block-editor/post-text-editor.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { parse, serialize } from '@wordpress/blocks';\n\nexport class PostTextEditor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\t// @ts-ignore */}\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { instanceId } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n// @ts-ignore\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks } = select( 'isolated/editor' );\n\t\treturn {\n\t\t\tvalue: serialize( getBlocks() ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"],"mappings":"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"}