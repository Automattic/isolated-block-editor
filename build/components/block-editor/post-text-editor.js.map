{"version":3,"file":"post-text-editor.js","names":["PostTextEditor","props","edit","bind","stopEditing","state","event","value","target","onChange","setState","isDirty","onPersist","instanceId","__","Component","compose","withSelect","select","getBlocks","serialize","withDispatch","dispatch","updateBlocksWithoutUndo","content","blocks","parse","withInstanceId"],"sources":["../../../src/components/block-editor/post-text-editor.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { parse, serialize } from '@wordpress/blocks';\n\nexport class PostTextEditor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\t// @ts-ignore */}\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { instanceId } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks } = select( 'isolated/editor' );\n\t\treturn {\n\t\t\tvalue: serialize( getBlocks() ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEaA,c;;;;;EACZ,wBAAaC,KAAb,EAAqB;IAAA;;IAAA;IACpB,0BAAOA,KAAP;IAEA,MAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,gDAAZ;IACA,MAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,gDAAnB;IAEA,MAAKE,KAAL,GAAa,EAAb;IANoB;EAOpB;;;;;IAaD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACC,cAAMC,KAAN,EAAc;MACb;MACA,IAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;MACA,KAAKN,KAAL,CAAWQ,QAAX,CAAqBF,KAArB;MACA,KAAKG,QAAL,CAAe;QAAEH,KAAK,EAALA,KAAF;QAASI,OAAO,EAAE;MAAlB,CAAf;IACA;IAED;AACD;AACA;AACA;AACA;;;;WACC,uBAAc;MACb,IAAK,KAAKN,KAAL,CAAWM,OAAhB,EAA0B;QACzB,KAAKV,KAAL,CAAWW,SAAX,CAAsB,KAAKP,KAAL,CAAWE,KAAjC;QACA,KAAKG,QAAL,CAAe;UAAEC,OAAO,EAAE;QAAX,CAAf;MACA;IACD;;;WAED,kBAAS;MACR,IAAQJ,KAAR,GAAkB,KAAKF,KAAvB,CAAQE,KAAR;MACA,IAAQM,UAAR,GAAuB,KAAKZ,KAA5B,CAAQY,UAAR;MACA,OACC,8BACC;QAAO,OAAO,yBAAoBA,UAApB,CAAd;QAAkD,SAAS,EAAC;MAA5D,GACG,IAAAC,QAAA,EAAI,mBAAJ,CADH,CADD,EAIC,cAAC,iCAAD;QACC,YAAY,EAAC,KADd;QAEC,GAAG,EAAC,MAFL;QAGC,KAAK,EAAGP,KAHT,CAIC;QAJD;QAKC,QAAQ,EAAG,KAAKL,IALjB;QAMC,MAAM,EAAG,KAAKE,WANf;QAOC,SAAS,EAAC,yBAPX;QAQC,EAAE,yBAAoBS,UAApB,CARH;QASC,WAAW,EAAG,IAAAC,QAAA,EAAI,iCAAJ;MATf,EAJD,CADD;IAkBA;;;WA9DD,kCAAiCb,KAAjC,EAAwCI,KAAxC,EAAgD;MAC/C,IAAKA,KAAK,CAACM,OAAX,EAAqB;QACpB,OAAO,IAAP;MACA;;MAED,OAAO;QACNJ,KAAK,EAAEN,KAAK,CAACM,KADP;QAENI,OAAO,EAAE;MAFH,CAAP;IAIA;;;EAnBkCI,kB;;;;eA2ErB,IAAAC,gBAAA,EAAS,CACvB,IAAAC,gBAAA,EAAY,UAAEC,MAAF,EAAc;EACzB,cAAsBA,MAAM,CAAE,iBAAF,CAA5B;EAAA,IAAQC,SAAR,WAAQA,SAAR;;EACA,OAAO;IACNZ,KAAK,EAAE,IAAAa,iBAAA,EAAWD,SAAS,EAApB;EADD,CAAP;AAGA,CALD,CADuB,EAOvB,IAAAE,kBAAA,EAAc,UAAEC,QAAF,EAAgB;EAC7B,gBAAoCA,QAAQ,CAAE,iBAAF,CAA5C;EAAA,IAAQC,uBAAR,aAAQA,uBAAR;;EACA,OAAO;IACNd,QADM,oBACIe,OADJ,EACc;MACnB,IAAMC,MAAM,GAAG,IAAAC,aAAA,EAAOF,OAAP,CAAf;MACAD,uBAAuB,CAAEE,MAAF,CAAvB;IACA,CAJK;IAKNb,SALM,qBAKKY,OALL,EAKe;MACpB,IAAMC,MAAM,GAAG,IAAAC,aAAA,EAAOF,OAAP,CAAf;MACAD,uBAAuB,CAAEE,MAAF,CAAvB;IACA;EARK,CAAP;AAUA,CAZD,CAPuB,EAoBvBE,uBApBuB,CAAT,EAqBV3B,cArBU,C"}