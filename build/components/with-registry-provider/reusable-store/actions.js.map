{"version":3,"file":"actions.js","names":["_controls","require","_marked","_regenerator","mark","__experimentalConvertBlockToStatic","_marked2","__experimentalConvertBlocksToReusable","_marked3","__experimentalDeleteReusableBlock","clientId","wrap","__experimentalConvertBlockToStatic$","_context","prev","next","convertBlockToStatic","stop","clientIds","__experimentalConvertBlocksToReusable$","_context2","convertBlocksToReusable","id","__experimentalDeleteReusableBlock$","_context3","deleteReusableBlock","__experimentalSetEditingReusableBlock","isEditing","type"],"sources":["../../../../src/components/with-registry-provider/reusable-store/actions.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { convertBlockToStatic, convertBlocksToReusable, deleteReusableBlock } from './controls';\n\n/**\n * Returns a generator converting a reusable block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport function* __experimentalConvertBlockToStatic( clientId ) {\n\tyield convertBlockToStatic( clientId );\n}\n\n/**\n * Returns a generator converting one or more static blocks into a reusable block.\n *\n * @param {string[]} clientIds The client IDs of the block to detach.\n */\nexport function* __experimentalConvertBlocksToReusable( clientIds ) {\n\tyield convertBlocksToReusable( clientIds );\n}\n\n/**\n * Returns a generator deleting a reusable block.\n *\n * @param {string} id The ID of the reusable block to delete.\n */\nexport function* __experimentalDeleteReusableBlock( id ) {\n\tyield deleteReusableBlock( id );\n}\n\n/**\n * Returns an action descriptor for SET_EDITING_REUSABLE_BLOCK action.\n *\n * @param {string} clientId The clientID of the reusable block to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function __experimentalSetEditingReusableBlock( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_REUSABLE_BLOCK',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n"],"mappings":";;;;;;;;;;;AAGA,IAAAA,SAAA,GAAAC,OAAA;AAAgG,IAAAC,OAAA,gBAAAC,YAAA,YAAAC,IAAA,CAO/EC,kCAAkC;EAAAC,QAAA,gBAAAH,YAAA,YAAAC,IAAA,CASlCG,qCAAqC;EAAAC,QAAA,gBAAAL,YAAA,YAAAC,IAAA,CASrCK,iCAAiC;AA5BlD;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACO,SAAUJ,kCAAkCA,CAAEK,QAAQ;EAAA,OAAAP,YAAA,YAAAQ,IAAA,UAAAC,oCAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAE,IAAA;QAC5D,OAAM,IAAAC,8BAAoB,EAAEN,QAAS,CAAC;MAAA;MAAA;QAAA,OAAAG,QAAA,CAAAI,IAAA;IAAA;EAAA,GAAAf,OAAA;AAAA;;AAGvC;AACA;AACA;AACA;AACA;AACO,SAAUK,qCAAqCA,CAAEW,SAAS;EAAA,OAAAf,YAAA,YAAAQ,IAAA,UAAAQ,uCAAAC,SAAA;IAAA,kBAAAA,SAAA,CAAAN,IAAA,GAAAM,SAAA,CAAAL,IAAA;MAAA;QAAAK,SAAA,CAAAL,IAAA;QAChE,OAAM,IAAAM,iCAAuB,EAAEH,SAAU,CAAC;MAAA;MAAA;QAAA,OAAAE,SAAA,CAAAH,IAAA;IAAA;EAAA,GAAAX,QAAA;AAAA;;AAG3C;AACA;AACA;AACA;AACA;AACO,SAAUG,iCAAiCA,CAAEa,EAAE;EAAA,OAAAnB,YAAA,YAAAQ,IAAA,UAAAY,mCAAAC,SAAA;IAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;MAAA;QAAAS,SAAA,CAAAT,IAAA;QACrD,OAAM,IAAAU,6BAAmB,EAAEH,EAAG,CAAC;MAAA;MAAA;QAAA,OAAAE,SAAA,CAAAP,IAAA;IAAA;EAAA,GAAAT,QAAA;AAAA;;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkB,qCAAqCA,CAAEhB,QAAQ,EAAEiB,SAAS,EAAG;EAC5E,OAAO;IACNC,IAAI,EAAE,4BAA4B;IAClClB,QAAQ,EAARA,QAAQ;IACRiB,SAAS,EAATA;EACD,CAAC;AACF"}