{"version":3,"file":"controls.js","names":["convertBlockToStatic","clientId","type","convertBlocksToReusable","clientIds","deleteReusableBlock","id","controls","CONVERT_BLOCK_TO_STATIC","createRegistryControl","registry","oldBlock","select","getBlock","reusableBlock","getEditedEntityRecord","attributes","ref","newBlocks","parse","content","dispatch","replaceBlocks","CONVERT_BLOCKS_TO_REUSABLE","title","__","serialize","getBlocksByClientId","status","saveEntityRecord","updatedRecord","newBlock","createBlock","reusableBlocksStore","__experimentalSetEditingReusableBlock","DELETE_REUSABLE_BLOCK","allBlocks","getBlocks","associatedBlocks","filter","block","isReusableBlock","associatedBlockClientIds","map","length","removeBlocks","deleteEntityRecord"],"sources":["../../../../src/components/with-registry-provider/reusable-store/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isReusableBlock, createBlock, parse, serialize } from '@wordpress/blocks';\nimport { createRegistryControl } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Convert a reusable block to a static block effect handler\n *\n * @param {string}  clientId Block ID.\n * @return {Object} control descriptor.\n */\nexport function convertBlockToStatic( clientId ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCK_TO_STATIC',\n\t\tclientId,\n\t};\n}\n\n/**\n * Convert a static block to a reusable block effect handler\n *\n * @param {Array}  clientIds Block IDs.\n * @return {Object} control descriptor.\n */\nexport function convertBlocksToReusable( clientIds ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCKS_TO_REUSABLE',\n\t\tclientIds,\n\t};\n}\n\n/**\n * Deletes a reusable block.\n *\n * @param {string} id Reusable block ID.\n * @return {Object} control descriptor.\n */\nexport function deleteReusableBlock( id ) {\n\treturn {\n\t\ttype: 'DELETE_REUSABLE_BLOCK',\n\t\tid,\n\t};\n}\n\nconst controls = {\n\tCONVERT_BLOCK_TO_STATIC: createRegistryControl( ( registry ) => ( { clientId } ) => {\n\t\tconst oldBlock = registry.select( 'core/block-editor' ).getBlock( clientId );\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord( 'postType', 'wp_block', oldBlock.attributes.ref );\n\n\t\tconst newBlocks = parse( reusableBlock.content );\n\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( oldBlock.clientId, newBlocks );\n\t} ),\n\n\tCONVERT_BLOCKS_TO_REUSABLE: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { clientIds } ) {\n\t\t\t\tconst reusableBlock = {\n\t\t\t\t\ttitle: __( 'Untitled Reusable Block' ),\n\t\t\t\t\tcontent: serialize( registry.select( 'core/block-editor' ).getBlocksByClientId( clientIds ) ),\n\t\t\t\t\tstatus: 'publish',\n\t\t\t\t};\n\n\t\t\t\tconst updatedRecord = await registry\n\t\t\t\t\t.dispatch( 'core' )\n\t\t\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\t\tref: updatedRecord.id,\n\t\t\t\t} );\n\t\t\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( clientIds, newBlock );\n\t\t\t\tregistry\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\t.dispatch( reusableBlocksStore )\n\t\t\t\t\t.__experimentalSetEditingReusableBlock( newBlock.clientId, true );\n\t\t\t}\n\t),\n\n\tDELETE_REUSABLE_BLOCK: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { id } ) {\n\t\t\t\tconst reusableBlock = registry.select( 'core' ).getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t\t\t\t// Don't allow a reusable block with a temporary ID to be deleted\n\t\t\t\tif ( ! reusableBlock ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove any other blocks that reference this reusable block\n\t\t\t\tconst allBlocks = registry.select( 'core/block-editor' ).getBlocks();\n\t\t\t\tconst associatedBlocks = allBlocks.filter(\n\t\t\t\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t\t\t\t);\n\t\t\t\tconst associatedBlockClientIds = associatedBlocks.map( ( block ) => block.clientId );\n\n\t\t\t\t// Remove the parsed block.\n\t\t\t\tif ( associatedBlockClientIds.length ) {\n\t\t\t\t\tregistry.dispatch( 'core/block-editor' ).removeBlocks( associatedBlockClientIds );\n\t\t\t\t}\n\n\t\t\t\tawait registry.dispatch( 'core' ).deleteEntityRecord( 'postType', 'wp_block', id );\n\t\t\t}\n\t),\n};\n\nexport default controls;\n"],"mappings":"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"}