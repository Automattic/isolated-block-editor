{"version":3,"file":"controls.js","names":["convertBlockToStatic","clientId","type","convertBlocksToReusable","clientIds","deleteReusableBlock","id","controls","CONVERT_BLOCK_TO_STATIC","createRegistryControl","registry","oldBlock","select","getBlock","reusableBlock","getEditedEntityRecord","attributes","ref","newBlocks","parse","content","dispatch","replaceBlocks","CONVERT_BLOCKS_TO_REUSABLE","title","__","serialize","getBlocksByClientId","status","saveEntityRecord","updatedRecord","newBlock","createBlock","reusableBlocksStore","__experimentalSetEditingReusableBlock","DELETE_REUSABLE_BLOCK","allBlocks","getBlocks","associatedBlocks","filter","block","isReusableBlock","associatedBlockClientIds","map","length","removeBlocks","deleteEntityRecord"],"sources":["../../../../src/components/with-registry-provider/reusable-store/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isReusableBlock, createBlock, parse, serialize } from '@wordpress/blocks';\nimport { createRegistryControl } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Convert a reusable block to a static block effect handler\n *\n * @param {string}  clientId Block ID.\n * @return {Object} control descriptor.\n */\nexport function convertBlockToStatic( clientId ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCK_TO_STATIC',\n\t\tclientId,\n\t};\n}\n\n/**\n * Convert a static block to a reusable block effect handler\n *\n * @param {Array}  clientIds Block IDs.\n * @return {Object} control descriptor.\n */\nexport function convertBlocksToReusable( clientIds ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCKS_TO_REUSABLE',\n\t\tclientIds,\n\t};\n}\n\n/**\n * Deletes a reusable block.\n *\n * @param {string} id Reusable block ID.\n * @return {Object} control descriptor.\n */\nexport function deleteReusableBlock( id ) {\n\treturn {\n\t\ttype: 'DELETE_REUSABLE_BLOCK',\n\t\tid,\n\t};\n}\n\nconst controls = {\n\tCONVERT_BLOCK_TO_STATIC: createRegistryControl( ( registry ) => ( { clientId } ) => {\n\t\tconst oldBlock = registry.select( 'core/block-editor' ).getBlock( clientId );\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord( 'postType', 'wp_block', oldBlock.attributes.ref );\n\n\t\tconst newBlocks = parse( reusableBlock.content );\n\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( oldBlock.clientId, newBlocks );\n\t} ),\n\n\tCONVERT_BLOCKS_TO_REUSABLE: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { clientIds } ) {\n\t\t\t\tconst reusableBlock = {\n\t\t\t\t\ttitle: __( 'Untitled Reusable Block' ),\n\t\t\t\t\tcontent: serialize( registry.select( 'core/block-editor' ).getBlocksByClientId( clientIds ) ),\n\t\t\t\t\tstatus: 'publish',\n\t\t\t\t};\n\n\t\t\t\tconst updatedRecord = await registry\n\t\t\t\t\t.dispatch( 'core' )\n\t\t\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\t\tref: updatedRecord.id,\n\t\t\t\t} );\n\t\t\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( clientIds, newBlock );\n\t\t\t\tregistry\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\t.dispatch( reusableBlocksStore )\n\t\t\t\t\t.__experimentalSetEditingReusableBlock( newBlock.clientId, true );\n\t\t\t}\n\t),\n\n\tDELETE_REUSABLE_BLOCK: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { id } ) {\n\t\t\t\tconst reusableBlock = registry.select( 'core' ).getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t\t\t\t// Don't allow a reusable block with a temporary ID to be deleted\n\t\t\t\tif ( ! reusableBlock ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove any other blocks that reference this reusable block\n\t\t\t\tconst allBlocks = registry.select( 'core/block-editor' ).getBlocks();\n\t\t\t\tconst associatedBlocks = allBlocks.filter(\n\t\t\t\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t\t\t\t);\n\t\t\t\tconst associatedBlockClientIds = associatedBlocks.map( ( block ) => block.clientId );\n\n\t\t\t\t// Remove the parsed block.\n\t\t\t\tif ( associatedBlockClientIds.length ) {\n\t\t\t\t\tregistry.dispatch( 'core/block-editor' ).removeBlocks( associatedBlockClientIds );\n\t\t\t\t}\n\n\t\t\t\tawait registry.dispatch( 'core' ).deleteEntityRecord( 'postType', 'wp_block', id );\n\t\t\t}\n\t),\n};\n\nexport default controls;\n"],"mappings":"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"}