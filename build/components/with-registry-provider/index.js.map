{"version":3,"file":"index.js","names":["registries","STORE_NAME","withRegistryProvider","createHigherOrderComponent","WrappedComponent","withRegistry","props","registry","settings","additionalProps","defaultSettings","applyDefaultSettings","iso","persistenceKey","preferencesKey","defaultPreferences","customStores","useState","subRegistry","setSubRegistry","useEffect","newRegistry","createRegistry","reusableStore","interfaceStore","use","plugins","persistence","store","registerStore","storeConfig","blockEditorStore","blockEditorStoreConfig","persist","editorStore","coreEditorStoreConfig","selectors","decoratedEditor","select","map","push","name","config","applyMiddlewares","cleanup","filter","item"],"sources":["../../../src/components/with-registry-provider/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { withRegistry, createRegistry, RegistryProvider, plugins } from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { storeConfig as blockEditorStoreConfig } from '@wordpress/block-editor';\nimport { storeConfig as coreEditorStoreConfig } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport storeConfig from '../../store';\nimport applyMiddlewares from '../../store/middlewares';\nimport reusableStore from './reusable-store';\nimport applyDefaultSettings from '../default-settings';\nimport decoratedEditor from '../../store/core-editor';\nimport interfaceStore from './interface-store';\n\n// Keep track of the registries we create so we can release them after the editor instance is removed\nlet registries = [];\n\nconst STORE_NAME = 'isolated/editor';\n\n/**\n * This is the core of having a multi-editor Gutenberg experience.\n *\n * We create a sub registry that contains copies of `core/block-editor`, `core/editor`, and STORE_NAME. These are specific to the editor instance and\n * provide the content for each editor, as well as overriding some core functions\n *\n * The key `persistenceKey` from the settings is used as the `localStorage` key to save Gutenberg preferences\n */\nconst withRegistryProvider = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\twithRegistry( ( props ) => {\n\t\t\tconst { registry, settings, ...additionalProps } = props;\n\t\t\tconst defaultSettings = applyDefaultSettings( settings );\n\t\t\tconst { persistenceKey, preferencesKey, defaultPreferences, customStores = [] } = defaultSettings.iso || {};\n\t\t\tconst [ subRegistry, setSubRegistry ] = useState( null );\n\n\t\t\tuseEffect( () => {\n\t\t\t\t// Create a new registry for this editor. We have the STORE_NAME for storing blocks and other data\n\t\t\t\t// and a duplicate of `core/block-editor` for storing block selections\n\t\t\t\tconst newRegistry = createRegistry(\n\t\t\t\t\t{\n\t\t\t\t\t\t'core/reusable-blocks': reusableStore,\n\t\t\t\t\t\t'core/interface': interfaceStore,\n\t\t\t\t\t},\n\t\t\t\t\tregistry\n\t\t\t\t);\n\n\t\t\t\t// Enable the persistence plugin so we use settings in `localStorage`\n\t\t\t\tif ( persistenceKey ) {\n\t\t\t\t\tnewRegistry.use( plugins.persistence, {\n\t\t\t\t\t\tpersistenceKey,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Create our custom store\n\t\t\t\tconst store = newRegistry.registerStore(\n\t\t\t\t\tSTORE_NAME,\n\t\t\t\t\tstoreConfig( preferencesKey, defaultPreferences )\n\t\t\t\t);\n\n\t\t\t\t// Create the core/block-editor store separatley as we need the persistence plugin to be active\n\t\t\t\tconst blockEditorStore = newRegistry.registerStore( 'core/block-editor', {\n\t\t\t\t\t...blockEditorStoreConfig,\n\t\t\t\t\tpersist: [ 'preferences' ],\n\t\t\t\t} );\n\n\t\t\t\t// Duplicate the core/editor store so we can decorate it\n\t\t\t\tconst editorStore = newRegistry.registerStore( 'core/editor', {\n\t\t\t\t\t...coreEditorStoreConfig,\n\t\t\t\t\tselectors: {\n\t\t\t\t\t\t...coreEditorStoreConfig.selectors,\n\t\t\t\t\t\t...decoratedEditor( coreEditorStoreConfig.selectors, newRegistry.select ),\n\t\t\t\t\t},\n\t\t\t\t\tpersist: [ 'preferences' ],\n\t\t\t\t} );\n\n\t\t\t\t// Create any custom stores inside our registry\n\t\t\t\tcustomStores.map( ( store ) => {\n\t\t\t\t\tregistries.push( newRegistry.registerStore( store.name, store.config ) );\n\t\t\t\t} );\n\n\t\t\t\tregistries.push( store );\n\t\t\t\tregistries.push( blockEditorStore );\n\t\t\t\tregistries.push( editorStore );\n\n\t\t\t\t// This should be removed after the refactoring of the effects to controls.\n\t\t\t\tapplyMiddlewares( store );\n\t\t\t\tsetSubRegistry( newRegistry );\n\n\t\t\t\treturn function cleanup() {\n\t\t\t\t\tregistries = registries.filter( ( item ) => item !== store );\n\t\t\t\t};\n\t\t\t}, [ registry ] );\n\n\t\t\tif ( ! subRegistry ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t\t<WrappedComponent { ...additionalProps } settings={ defaultSettings } />\n\t\t\t\t</RegistryProvider>\n\t\t\t);\n\t\t} ),\n\t'withRegistryProvider'\n);\n\nexport default withRegistryProvider;\n"],"mappings":"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"}