{"version":3,"file":"editor-settings.js","names":["getAllowedBlockTypes","blockSettings","allBlockTypes","allowBlocks","length","map","block","name","getDisallowedBlocks","disallowBlocks","getEditorSettings","editorSettings","isoSettings","hasFixedToolbar","blocks","allowedBlockTypes","filter","blockName","indexOf"],"sources":["../../../src/components/editor-setup/editor-settings.js"],"sourcesContent":["/** @typedef {import('../../index').EditorSettings} EditorSettings */\n/** @typedef {import('../../index').IsoSettings} IsoSettings */\n\n/**\n * Get all the allowed block types, either from the settings, or all available blocks\n *\n * @param {{allowBlocks: string[]}} blockSettings - settings for available blocks\n * @param {object[]} allBlockTypes - All available blocks\n * @return {string[]}\n */\nfunction getAllowedBlockTypes( blockSettings, allBlockTypes ) {\n\tif ( blockSettings && blockSettings.allowBlocks && blockSettings.allowBlocks.length > 0 ) {\n\t\treturn blockSettings.allowBlocks;\n\t}\n\n\t// No allow blocks - return all blocks\n\treturn allBlockTypes.map( ( block ) => block.name );\n}\n\n/**\n * Get all the disallowed block types, either from the settings, or all available blocks\n *\n * @param {{disallowBlocks: string[]}} blockSettings - settings for disallowed blocks\n * @return {string[]}\n */\nfunction getDisallowedBlocks( blockSettings ) {\n\tif ( blockSettings && blockSettings.disallowBlocks ) {\n\t\treturn blockSettings.disallowBlocks;\n\t}\n\n\t// No blocks disallowed\n\treturn [];\n}\n\n/**\n * Get editor settings\n *\n * @param {EditorSettings} editorSettings - Editor settings\n * @param {IsoSettings} isoSettings\n * @param {object[]} allBlockTypes - All available blocks\n * @param {boolean} hasFixedToolbar - Do we need a fixed toolbar?\n * @return {EditorSettings}\n */\nexport default function getEditorSettings( editorSettings, isoSettings, allBlockTypes, hasFixedToolbar ) {\n\t// @ts-ignore\n\tconst disallowBlocks = getDisallowedBlocks( isoSettings.blocks );\n\n\treturn {\n\t\t...editorSettings,\n\t\thasFixedToolbar,\n\t\t// @ts-ignore\n\t\tallowedBlockTypes: getAllowedBlockTypes( isoSettings.blocks, allBlockTypes ).filter(\n\t\t\t( blockName ) => disallowBlocks.indexOf( blockName ) === -1\n\t\t),\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA+BC,aAA/B,EAA8CC,aAA9C,EAA8D;EAC7D,IAAKD,aAAa,IAAIA,aAAa,CAACE,WAA/B,IAA8CF,aAAa,CAACE,WAAd,CAA0BC,MAA1B,GAAmC,CAAtF,EAA0F;IACzF,OAAOH,aAAa,CAACE,WAArB;EACA,CAH4D,CAK7D;;;EACA,OAAOD,aAAa,CAACG,GAAd,CAAmB,UAAEC,KAAF;IAAA,OAAaA,KAAK,CAACC,IAAnB;EAAA,CAAnB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,mBAAT,CAA8BP,aAA9B,EAA8C;EAC7C,IAAKA,aAAa,IAAIA,aAAa,CAACQ,cAApC,EAAqD;IACpD,OAAOR,aAAa,CAACQ,cAArB;EACA,CAH4C,CAK7C;;;EACA,OAAO,EAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASC,iBAAT,CAA4BC,cAA5B,EAA4CC,WAA5C,EAAyDV,aAAzD,EAAwEW,eAAxE,EAA0F;EACxG;EACA,IAAMJ,cAAc,GAAGD,mBAAmB,CAAEI,WAAW,CAACE,MAAd,CAA1C;EAEA,uCACIH,cADJ;IAECE,eAAe,EAAfA,eAFD;IAGC;IACAE,iBAAiB,EAAEf,oBAAoB,CAAEY,WAAW,CAACE,MAAd,EAAsBZ,aAAtB,CAApB,CAA0Dc,MAA1D,CAClB,UAAEC,SAAF;MAAA,OAAiBR,cAAc,CAACS,OAAf,CAAwBD,SAAxB,MAAwC,CAAC,CAA1D;IAAA,CADkB;EAJpB;AAQA"}