{"version":3,"file":"index.js","names":["EditorSetup","props","currentSettings","updateSettings","setupEditor","isEditing","topToolbar","setupCoreEditor","useEffect","window","__editorAssets","undefined","styles","scripts","id","type","editor","reusableBlocks","compose","withSelect","select","settings","isFeatureActive","blocksStore","getBlockTypes","blockTypes","hasFixedToolbar","getEntityRecords","useMemo","getEditorSettings","iso","defaultPreferences","fixedToolbar","__experimentalReusableBlocks","__experimentalFetchReusableBlocks","withDispatch","dispatch","updateEditorSettings","setupEditorState"],"sources":["../../../src/components/editor-setup/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useEffect, useMemo } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { store as blocksStore } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\n\nimport getEditorSettings from './editor-settings';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * Settings callback\n *\n * @callback OnSettings\n * @param {BlockEditorSettings} settings\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {Object} props - Component props\n * @param {BlockEditorSettings} props.currentSettings - Modified settings\n * @param {OnSettings} props.updateSettings - Update settings\n * @param {OnSettings} props.setupEditor - Set up the Gutenberg editor\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {boolean} props.topToolbar - Is the top toolbar enabled?\n */\nfunction EditorSetup( props ) {\n\t// @ts-ignore\n\tconst { currentSettings, updateSettings, setupEditor, isEditing, topToolbar, setupCoreEditor } = props;\n\n\t// This is the initial setup\n\tuseEffect( () => {\n\t\t// Ensure we always have a __editorAssets value - Gutenberg hardcoded assets\n\t\t// @ts-ignore\n\t\tif ( window.__editorAssets === undefined ) {\n\t\t\t// @ts-ignore\n\t\t\twindow.__editorAssets = { styles: '', scripts: '' };\n\t\t}\n\n\t\t// Setup the Isolated Editor & Gutenberg\n\t\tsetupEditor( currentSettings );\n\n\t\t// And Gutenberg\n\t\tupdateSettings( currentSettings );\n\n\t\t// Set up the post entities with some dummy data, ensuring that anything that uses post entities can work\n\t\tsetupCoreEditor(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\ttype: 'post',\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t}, [] );\n\n\t// Run whenever the editor is focussed, or the topToolbar setting or reusable blocks change\n\tuseEffect( () => {\n\t\tif ( ! isEditing ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup Gutenberg for this editor, but only when focussed. This swaps allowed blocks and other capabilities\n\t\tupdateSettings( currentSettings );\n\t}, [ isEditing, topToolbar, currentSettings?.editor?.reusableBlocks ] );\n\n\treturn null;\n}\n\n// @ts-ignore\nexport default compose( [\n\twithSelect( ( select, { settings } ) => {\n\t\tconst { isEditing, isFeatureActive } = select( 'isolated/editor' );\n\t\tconst { getBlockTypes } = select( blocksStore );\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hasFixedToolbar = isFeatureActive( 'fixedToolbar' );\n\t\tconst reusableBlocks = select( 'core' ).getEntityRecords( 'postType', 'wp_block' );\n\n\t\treturn {\n\t\t\tisEditing: isEditing(),\n\t\t\ttopToolbar: hasFixedToolbar,\n\t\t\tcurrentSettings: useMemo(\n\t\t\t\t() => ( {\n\t\t\t\t\t...settings,\n\n\t\t\t\t\teditor: {\n\t\t\t\t\t\t...getEditorSettings(\n\t\t\t\t\t\t\tsettings.editor,\n\t\t\t\t\t\t\tsettings.iso,\n\t\t\t\t\t\t\tblockTypes,\n\t\t\t\t\t\t\t// Use the default preference, if set, otherwise use the feature\n\t\t\t\t\t\t\tsettings.iso?.defaultPreferences?.fixedToolbar !== undefined\n\t\t\t\t\t\t\t\t? settings.iso?.defaultPreferences?.fixedToolbar\n\t\t\t\t\t\t\t\t: hasFixedToolbar\n\t\t\t\t\t\t),\n\n\t\t\t\t\t\t// Reusable blocks\n\t\t\t\t\t\t__experimentalReusableBlocks: [],\n\t\t\t\t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// ...( settings.editor?.__experimentalReusableBlocks === false\n\t\t\t\t\t\t// \t? {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// \t  }\n\t\t\t\t\t\t// \t: {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: registry.dispatch( 'core/editor' )\n\t\t\t\t\t\t// \t\t\t\t.__experimentalFetchReusableBlocks,\n\t\t\t\t\t\t// \t  } ),\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t\t[ settings, blockTypes, hasFixedToolbar, reusableBlocks ]\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateEditorSettings, setupEditorState: setupCoreEditor } = dispatch( 'core/editor' );\n\t\tconst { updateSettings } = dispatch( 'core/block-editor' );\n\t\tconst { setupEditor } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tsetupEditor,\n\t\t\tsetupCoreEditor,\n\t\t\tupdateSettings: ( { editor } ) => {\n\t\t\t\tupdateSettings( editor );\n\t\t\t\tupdateEditorSettings( editor );\n\t\t\t},\n\t\t};\n\t} ),\n] )( EditorSetup );\n"],"mappings":"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"}