{"version":3,"sources":["../../../src/components/editor-setup/index.js"],"names":["EditorSetup","props","currentSettings","updateSettings","setupEditor","isEditing","topToolbar","setupCoreEditor","window","__editorAssets","undefined","styles","scripts","id","type","editor","reusableBlocks","select","settings","isFeatureActive","getBlockTypes","blockTypes","hasFixedToolbar","getEntityRecords","iso","defaultPreferences","fixedToolbar","__experimentalReusableBlocks","__experimentalFetchReusableBlocks","dispatch","updateEditorSettings","setupEditorState"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\n\nimport getEditorSettings from './editor-settings';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * Settings callback\n * @callback OnSettings\n * @param {BlockEditorSettings} settings\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {object} props - Component props\n * @param {BlockEditorSettings} props.currentSettings - Modified settings\n * @param {OnSettings} props.updateSettings - Update settings\n * @param {OnSettings} props.setupEditor - Set up the Gutenberg editor\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {boolean} props.topToolbar - Is the top toolbar enabled?\n */\nfunction EditorSetup( props ) {\n\t// @ts-ignore\n\tconst { currentSettings, updateSettings, setupEditor, isEditing, topToolbar, setupCoreEditor } = props;\n\n\t// This is the initial setup\n\tuseEffect( () => {\n\t\t// Ensure we always have a __editorAssets value - Gutenberg hardcoded assets\n\t\t// @ts-ignore\n\t\tif ( typeof window.__editorAssets === undefined ) {\n\t\t\t// @ts-ignore\n\t\t\twindow.__editorAssets = { styles: '', scripts: '' }\n\t\t}\n\n\t\t// Setup the Isolated Editor & Gutenberg\n\t\tsetupEditor( currentSettings );\n\n\t\t// And Gutenberg\n\t\tupdateSettings( currentSettings );\n\n\t\t// Set up the post entities with some dummy data, ensuring that anything that uses post entities can work\n\t\tsetupCoreEditor( {\n\t\t\tid: 0,\n\t\t\ttype: 'post',\n\t\t}, [] );\n\t}, [] );\n\n\t// Run whenever the editor is focussed, or the topToolbar setting or reusable blocks change\n\tuseEffect( () => {\n\t\tif ( ! isEditing ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup Gutenberg for this editor, but only when focussed. This swaps allowed blocks and other capabilities\n\t\tupdateSettings( currentSettings );\n\t}, [ isEditing, topToolbar, currentSettings?.editor?.reusableBlocks ] );\n\n\treturn null;\n}\n\nexport default compose( [\n\twithSelect( ( select, { settings } ) => {\n\t\tconst { isEditing, isFeatureActive } = select( 'isolated/editor' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hasFixedToolbar = isFeatureActive( 'fixedToolbar' );\n\t\tconst reusableBlocks = select( 'core' ).getEntityRecords( 'postType', 'wp_block' );\n\n\t\treturn {\n\t\t\tisEditing: isEditing(),\n\t\t\ttopToolbar: hasFixedToolbar,\n\t\t\tcurrentSettings: useMemo(\n\t\t\t\t() => ( {\n\t\t\t\t\t...settings,\n\n\t\t\t\t\teditor: {\n\t\t\t\t\t\t...getEditorSettings(\n\t\t\t\t\t\t\tsettings.editor,\n\t\t\t\t\t\t\tsettings.iso,\n\t\t\t\t\t\t\tblockTypes,\n\t\t\t\t\t\t\t// Use the default preference, if set, otherwise use the feature\n\t\t\t\t\t\t\tsettings.iso?.defaultPreferences?.fixedToolbar !== undefined ? settings.iso?.defaultPreferences?.fixedToolbar : hasFixedToolbar\n\t\t\t\t\t\t),\n\n\t\t\t\t\t\t// Reusable blocks\n\t\t\t\t\t\t__experimentalReusableBlocks: [],\n\t\t\t\t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// ...( settings.editor?.__experimentalReusableBlocks === false\n\t\t\t\t\t\t// \t? {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// \t  }\n\t\t\t\t\t\t// \t: {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: registry.dispatch( 'core/editor' )\n\t\t\t\t\t\t// \t\t\t\t.__experimentalFetchReusableBlocks,\n\t\t\t\t\t\t// \t  } ),\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t\t[ settings, blockTypes, hasFixedToolbar, reusableBlocks ]\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateEditorSettings, setupEditorState: setupCoreEditor } = dispatch( 'core/editor' );\n\t\tconst { updateSettings } = dispatch( 'core/block-editor' );\n\t\tconst { setupEditor } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tsetupEditor,\n\t\t\tsetupCoreEditor,\n\t\t\tupdateSettings: ( { editor } ) => {\n\t\t\t\tupdateSettings( editor );\n\t\t\t\tupdateEditorSettings( editor );\n\t\t\t},\n\t\t};\n\t} ),\n] )( EditorSetup );\n"],"file":"index.js"}