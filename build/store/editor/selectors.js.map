{"version":3,"file":"selectors.js","names":["_lodash","require","_data","_interface","getEditorMode","state","editor","editorMode","getEditorSettings","settings","isEditorReady","isReady","getCurrentPatternName","currentPattern","getCurrentPattern","_state$editor","patterns","index","length","name","getIgnoredContent","ignoredContent","getNamedPattern","patternName","_state$editor$pattern","pattern","find","item","replace","isInserterOpened","isEditorSidebarOpened","createRegistrySelector","select","activeGeneralSidebar","interfaceStore","getActiveComplementaryArea","includes","exports","isEditing","getPatterns","isListViewOpened","getPreviewDeviceType","deviceType","getCanvasStyles","canvasStyles","isIframePreview"],"sources":["../../../src/store/editor/selectors.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/** @typedef {import('../../index').IsoSettings} IsoSettings */\n/** @typedef {import('./reducer').EditorMode} EditorMode */\n/** @typedef {import('./reducer').Pattern} Pattern */\n/** @typedef {import('./reducer').EditorState} EditorState */\n\n/**\n * Get current editor mode\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {EditorMode}\n */\nexport function getEditorMode( state ) {\n\treturn state.editor.editorMode;\n}\n\n/**\n * Get current editor settings\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {IsoSettings}\n */\nexport function getEditorSettings( state ) {\n\treturn state.editor.settings;\n}\n\n/**\n * Is the editor ready for use?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isEditorReady( state ) {\n\treturn state.editor.isReady;\n}\n\n/**\n * Get current pattern name\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string|null}\n */\nexport function getCurrentPatternName( state ) {\n\treturn state.editor.currentPattern;\n}\n\n/**\n * Get current pattern\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Pattern|null}\n */\nexport function getCurrentPattern( state ) {\n\tconst { currentPattern, patterns } = state.editor;\n\n\tif ( currentPattern && patterns ) {\n\t\tfor ( let index = 0; index < patterns.length; index++ ) {\n\t\t\tif ( patterns[ index ].name === currentPattern ) {\n\t\t\t\treturn patterns[ index ];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Get all ignored content\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string[]}\n */\nexport function getIgnoredContent( state ) {\n\treturn state.editor.ignoredContent;\n}\n\n/**\n * Get the pattern for a given name\n *\n * @param {{editor: EditorState}} state - Current state\n * @param patternName\n * @return {Pattern|null}\n */\nexport function getNamedPattern( state, patternName ) {\n\tconst { patterns = [] } = state.editor;\n\tlet pattern = patterns.find( ( item ) => item.name === patternName );\n\n\t// Find the full name\n\tif ( pattern ) {\n\t\treturn pattern;\n\t}\n\n\t// Find the shortened name\n\tpattern = patterns.find( ( item ) => item.name.replace( 'p2/', '' ) === patternName );\n\tif ( pattern ) {\n\t\treturn pattern;\n\t}\n\n\treturn null;\n}\n\n/**\n * Is the block inserter open?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isInserterOpened( state ) {\n\treturn state.editor.isInserterOpened;\n}\n\nexport const isEditorSidebarOpened = createRegistrySelector( ( select ) => () => {\n\tconst activeGeneralSidebar = select( interfaceStore ).getActiveComplementaryArea( 'isolated/editor' );\n\n\treturn includes( [ 'edit-post/document', 'edit-post/block' ], activeGeneralSidebar );\n} );\n\n/**\n * Are we editing this editor?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isEditing( state ) {\n\treturn state.editor.isEditing;\n}\n\n/**\n * Get all patterns\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Pattern[]}\n */\nexport function getPatterns( state ) {\n\treturn state.editor.patterns;\n}\n\n/**\n * Determine if the list viewer is open\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isListViewOpened( state ) {\n\treturn state.editor.isListViewOpened;\n}\n\n/**\n * Return current device type\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string}\n */\nexport function getPreviewDeviceType( state ) {\n\treturn state.editor.deviceType;\n}\n\n/**\n * Return editor canvas styles\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Object} editor canvas styles\n */\nexport function getCanvasStyles( state ) {\n\treturn state.editor.canvasStyles;\n}\n\n/**\n * Whether the editor canvas is an iframe\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean} whether the editor canvas is an iframe\n */\nexport function isIframePreview( state ) {\n\treturn state.editor.isIframePreview || [ 'Tablet', 'Mobile' ].includes( state.editor.deviceType );\n}"],"mappings":"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"}