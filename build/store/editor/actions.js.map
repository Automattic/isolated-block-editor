{"version":3,"sources":["../../../src/store/editor/actions.js"],"names":["actions","setReady","isReady","type","setEditorMode","editorMode","setupEditor","settings","setCurrentPattern","pattern","setIsInserterOpened","isOpen","setDeviceType","deviceType","setEditing","isEditing","openGeneralSidebar","name","controls","dispatch","interfaceStore","closeGeneralSidebar","setIsListViewOpened"],"mappings":";;;;;;;;;;;AAIA;;AACA;;AALA;AACA;AACA;;AAKA;;AACA;AAEA,IAAMA,OAAO,GAAG;AACf;AACD;AACA;AACA;AACCC,EAAAA,QALe,oBAKLC,OALK,EAKK;AACnB,WAAO;AACNC,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,OAAO,EAAPA;AAFM,KAAP;AAIA,GAVc;;AAWf;AACD;AACA;AACA;AACCE,EAAAA,aAfe,yBAeAC,UAfA,EAea;AAC3B,WAAO;AACNF,MAAAA,IAAI,EAAE,iBADA;AAENE,MAAAA,UAAU,EAAVA;AAFM,KAAP;AAIA,GApBc;;AAqBf;AACD;AACA;AACA;AACCC,EAAAA,WAzBe,uBAyBFC,QAzBE,EAyBS;AACvB,WAAO;AACNJ,MAAAA,IAAI,EAAE,cADA;AAENI,MAAAA,QAAQ,EAARA;AAFM,KAAP;AAIA,GA9Bc;;AA+Bf;AACD;AACA;AACA;AACCC,EAAAA,iBAnCe,6BAmCIC,OAnCJ,EAmCc;AAC5B,WAAO;AACNN,MAAAA,IAAI,EAAE,qBADA;AAENM,MAAAA,OAAO,EAAPA;AAFM,KAAP;AAIA,GAxCc;;AAyCf;AACD;AACA;AACA;AACCC,EAAAA,mBA7Ce,+BA6CMC,MA7CN,EA6Ce;AAC7B,WAAO;AACNR,MAAAA,IAAI,EAAE,mBADA;AAENQ,MAAAA,MAAM,EAANA;AAFM,KAAP;AAIA,GAlDc;;AAmDf;AACD;AACA;AACA;AACCC,EAAAA,aAvDe,yBAuDAC,UAvDA,EAuDa;AAC3B,WAAO;AACNV,MAAAA,IAAI,EAAE,iBADA;AAENU,MAAAA,UAAU,EAAVA;AAFM,KAAP;AAIA,GA5Dc;;AA6Df;AACD;AACA;AACA;AACCC,EAAAA,UAjEe,sBAiEHC,SAjEG,EAiES;AACvB,WAAO;AACNZ,MAAAA,IAAI,EAAE,aADA;AAENY,MAAAA,SAAS,EAATA;AAFM,KAAP;AAIA,GAtEc;;AAuEf;AACD;AACA;AACA;AACEC,EAAAA,kBA3Ec,wEA2EMC,IA3EN;AAAA;AAAA;AAAA;AAAA;AAAA;AA4Ed,mBAAMC,eAASC,QAAT,CAAmBC,gBAAnB,EAAmC,yBAAnC,EAA8D,iBAA9D,EAAiFH,IAAjF,CAAN;;AA5Ec;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8Ef;AACD;AACA;AACEI,EAAAA,mBAjFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAkFd,mBAAMH,eAASC,QAAT,CAAmBC,gBAAnB,EAAmC,0BAAnC,EAA+D,iBAA/D,CAAN;;AAlFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoFf;AACD;AACA;AACA;AACCE,EAAAA,mBAxFe,+BAwFMX,MAxFN,EAwFe;AAC7B,WAAO;AACNR,MAAAA,IAAI,EAAE,mBADA;AAENQ,MAAAA,MAAM,EAANA;AAFM,KAAP;AAIA;AA7Fc,CAAhB;eAgGeX,O","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { controls } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('./reducer').EditorMode} EditorMode */\n\nconst actions = {\n\t/**\n\t * Set whether the editor is ready for editing\n\t * @param {boolean} isReady\n\t */\n\tsetReady( isReady ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITOR_READY',\n\t\t\tisReady,\n\t\t};\n\t},\n\t/**\n\t * Set the current editor mode\n\t * @param {EditorMode} editorMode Editor mode\n\t */\n\tsetEditorMode( editorMode ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITOR_MODE',\n\t\t\teditorMode,\n\t\t};\n\t},\n\t/**\n\t * Set up the editor\n\t * @param {BlockEditorSettings} settings\n\t */\n\tsetupEditor( settings ) {\n\t\treturn {\n\t\t\ttype: 'SETUP_EDITOR',\n\t\t\tsettings,\n\t\t};\n\t},\n\t/**\n\t * Set the current pattern name\n\t * @param {string} pattern Pattern name\n\t */\n\tsetCurrentPattern( pattern ) {\n\t\treturn {\n\t\t\ttype: 'SET_CURRENT_PATTERN',\n\t\t\tpattern,\n\t\t};\n\t},\n\t/**\n\t * Mark the block inserter as open or closed\n\t * @param {boolean} name\n\t */\n\tsetIsInserterOpened( isOpen ) {\n\t\treturn {\n\t\t\ttype: 'SET_INSERTER_OPEN',\n\t\t\tisOpen,\n\t\t};\n\t},\n\t/**\n\t * Set the current device type\n\t * @param {string} deviceType 'Mobile', 'Desktop', or 'Tablet'\n\t */\n\tsetDeviceType( deviceType ) {\n\t\treturn {\n\t\t\ttype: 'SET_DEVICE_TYPE',\n\t\t\tdeviceType,\n\t\t};\n\t},\n\t/**\n\t * Mark this editor as in-use or not\n\t * @param {boolean} isEditing\n\t */\n\tsetEditing( isEditing ) {\n\t\treturn {\n\t\t\ttype: 'SET_EDITING',\n\t\t\tisEditing,\n\t\t};\n\t},\n\t/**\n\t * Open the named sidebar\n\t * @param {string} name Name of sidebar section\n\t */\n\t*openGeneralSidebar( name ) {\n\t\tyield controls.dispatch( interfaceStore, 'enableComplementaryArea', 'isolated/editor', name );\n\t},\n\t/**\n\t * Close the sidebar (or popover)\n\t */\n\t*closeGeneralSidebar() {\n\t\tyield controls.dispatch( interfaceStore, 'disableComplementaryArea', 'isolated/editor' );\n\t},\n\t/**\n\t * Set the status of the listview sidebar section\n\t * @param {boolean} isOpen\n\t */\n\tsetIsListViewOpened( isOpen ) {\n\t\treturn {\n\t\t\ttype: 'SET_LISTVIEW_OPEN',\n\t\t\tisOpen,\n\t\t};\n\t},\n};\n\nexport default actions;\n"],"file":"actions.js"}