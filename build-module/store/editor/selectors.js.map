{"version":3,"file":"selectors.js","names":["includes","createRegistrySelector","store","interfaceStore","getEditorMode","state","editor","editorMode","getEditorSettings","settings","isEditorReady","isReady","getCurrentPatternName","currentPattern","getCurrentPattern","patterns","index","length","name","getIgnoredContent","ignoredContent","getNamedPattern","patternName","pattern","find","item","replace","isInserterOpened","isEditorSidebarOpened","select","activeGeneralSidebar","getActiveComplementaryArea","isEditing","getPatterns","isListViewOpened","getPreviewDeviceType","deviceType","getCanvasStyles","canvasStyles","isIframePreview"],"sources":["../../../src/store/editor/selectors.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/** @typedef {import('../../index').IsoSettings} IsoSettings */\n/** @typedef {import('./reducer').EditorMode} EditorMode */\n/** @typedef {import('./reducer').Pattern} Pattern */\n/** @typedef {import('./reducer').EditorState} EditorState */\n\n/**\n * Get current editor mode\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {EditorMode}\n */\nexport function getEditorMode( state ) {\n\treturn state.editor.editorMode;\n}\n\n/**\n * Get current editor settings\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {IsoSettings}\n */\nexport function getEditorSettings( state ) {\n\treturn state.editor.settings;\n}\n\n/**\n * Is the editor ready for use?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isEditorReady( state ) {\n\treturn state.editor.isReady;\n}\n\n/**\n * Get current pattern name\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string|null}\n */\nexport function getCurrentPatternName( state ) {\n\treturn state.editor.currentPattern;\n}\n\n/**\n * Get current pattern\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Pattern|null}\n */\nexport function getCurrentPattern( state ) {\n\tconst { currentPattern, patterns } = state.editor;\n\n\tif ( currentPattern && patterns ) {\n\t\tfor ( let index = 0; index < patterns.length; index++ ) {\n\t\t\tif ( patterns[ index ].name === currentPattern ) {\n\t\t\t\treturn patterns[ index ];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Get all ignored content\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string[]}\n */\nexport function getIgnoredContent( state ) {\n\treturn state.editor.ignoredContent;\n}\n\n/**\n * Get the pattern for a given name\n *\n * @param {{editor: EditorState}} state - Current state\n * @param patternName\n * @return {Pattern|null}\n */\nexport function getNamedPattern( state, patternName ) {\n\tconst { patterns = [] } = state.editor;\n\tlet pattern = patterns.find( ( item ) => item.name === patternName );\n\n\t// Find the full name\n\tif ( pattern ) {\n\t\treturn pattern;\n\t}\n\n\t// Find the shortened name\n\tpattern = patterns.find( ( item ) => item.name.replace( 'p2/', '' ) === patternName );\n\tif ( pattern ) {\n\t\treturn pattern;\n\t}\n\n\treturn null;\n}\n\n/**\n * Is the block inserter open?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isInserterOpened( state ) {\n\treturn state.editor.isInserterOpened;\n}\n\nexport const isEditorSidebarOpened = createRegistrySelector( ( select ) => () => {\n\tconst activeGeneralSidebar = select( interfaceStore ).getActiveComplementaryArea( 'isolated/editor' );\n\n\treturn includes( [ 'edit-post/document', 'edit-post/block' ], activeGeneralSidebar );\n} );\n\n/**\n * Are we editing this editor?\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isEditing( state ) {\n\treturn state.editor.isEditing;\n}\n\n/**\n * Get all patterns\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Pattern[]}\n */\nexport function getPatterns( state ) {\n\treturn state.editor.patterns;\n}\n\n/**\n * Determine if the list viewer is open\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean}\n */\nexport function isListViewOpened( state ) {\n\treturn state.editor.isListViewOpened;\n}\n\n/**\n * Return current device type\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {string}\n */\nexport function getPreviewDeviceType( state ) {\n\treturn state.editor.deviceType;\n}\n\n/**\n * Return editor canvas styles\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {Object} editor canvas styles\n */\nexport function getCanvasStyles( state ) {\n\treturn state.editor.canvasStyles;\n}\n\n/**\n * Whether the editor canvas is an iframe\n *\n * @param {{editor: EditorState}} state - Current state\n * @return {boolean} whether the editor canvas is an iframe\n */\nexport function isIframePreview( state ) {\n\treturn state.editor.isIframePreview || [ 'Tablet', 'Mobile' ].includes( state.editor.deviceType );\n}"],"mappings":"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"}