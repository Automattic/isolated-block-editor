{"version":3,"sources":["../../../src/store/editor/reducer.js"],"names":["serialize","parse","createBlock","synchronizeBlocksWithTemplate","getPattern","patterns","currentPattern","find","item","name","DEFAULT_STATE","editorMode","isInserterOpened","isEditing","isListViewOpened","isReady","gutenbergTemplate","ignoredContent","deviceType","settings","preferencesKey","persistenceKey","blocks","allowBlocks","disallowBlocks","disallowEmbed","customStores","toolbar","inserter","toc","undo","inspector","navigation","documentInspector","selectorTool","sidebar","moreMenu","editor","fullscreen","preview","topToolbar","linkMenu","defaultPreferences","allowApi","getIgnoredContent","ignored","className","found","push","content","reducer","state","action","type","iso","template","pattern","isOpen","isInspectorOpened"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,WAA3B,EAAwCC,6BAAxC,QAA6E,mBAA7E;;AAEA,MAAMC,UAAU,GAAG,CAAEC,QAAF,EAAYC,cAAZ,KAClBD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,CAAiBC,IAAF,IAAYA,IAAI,CAACC,IAAL,KAAcH,cAAzC,CADb;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,MAAMI,aAAa,GAAG;AACrB;AACAC,EAAAA,UAAU,EAAE,QAFS;AAGrBC,EAAAA,gBAAgB,EAAE,KAHG;AAIrBC,EAAAA,SAAS,EAAE,KAJU;AAKrBC,EAAAA,gBAAgB,EAAE,KALG;AAMrBC,EAAAA,OAAO,EAAE,KANY;AAQrBV,EAAAA,QAAQ,EAAE,EARW;AASrBC,EAAAA,cAAc,EAAE,IATK;AAUrBU,EAAAA,iBAAiB,EAAE,IAVE;AAYrBC,EAAAA,cAAc,EAAE,EAZK;AAarBC,EAAAA,UAAU,EAAE,SAbS;AAerBC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,cAAc,EAAE,IADP;AAETC,IAAAA,cAAc,EAAE,IAFP;AAGTC,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE,EADN;AAEPC,MAAAA,cAAc,EAAE;AAFT,KAHC;AAOTC,IAAAA,aAAa,EAAE,EAPN;AAQTC,IAAAA,YAAY,EAAE,EARL;AASTC,IAAAA,OAAO,EAAE;AACRC,MAAAA,QAAQ,EAAE,IADF;AAERC,MAAAA,GAAG,EAAE,KAFG;AAGRC,MAAAA,IAAI,EAAE,IAHE;AAIRC,MAAAA,SAAS,EAAE,IAJH;AAKRC,MAAAA,UAAU,EAAE,KALJ;AAMRC,MAAAA,iBAAiB,EAAE,KANX;AAORC,MAAAA,YAAY,EAAE;AAPN,KATA;AAkBTC,IAAAA,OAAO,EAAE;AACRJ,MAAAA,SAAS,EAAE,KADH;AAERH,MAAAA,QAAQ,EAAE;AAFF,KAlBA;AAsBTQ,IAAAA,QAAQ,EAAE;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,UAAU,EAAE,KAFH;AAGTC,MAAAA,OAAO,EAAE,KAHA;AAITC,MAAAA,UAAU,EAAE;AAJH,KAtBD;AA4BTC,IAAAA,QAAQ,EAAE,EA5BD;AA6BTnC,IAAAA,cAAc,EAAE,IA7BP;AA8BTD,IAAAA,QAAQ,EAAE,EA9BD;AA+BTqC,IAAAA,kBAAkB,EAAE,EA/BX;AAgCTC,IAAAA,QAAQ,EAAE;AAhCD;AAfW,CAAtB;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA4BvC,QAA5B,EAAsCC,cAAtC,EAAsDU,iBAAtD,EAA0E;AACzE,QAAM6B,OAAO,GAAG,CACf7C,SAAS,CAAEE,WAAW,CAAE,gBAAF,CAAb,CADM,EAEfF,SAAS,CAAEE,WAAW,CAAE,gBAAF,EAAoB;AAAE4C,IAAAA,SAAS,EAAE;AAAb,GAApB,CAAb,CAFM,CAAhB;AAIA,QAAMC,KAAK,GAAG3C,UAAU,CAAEC,QAAF,EAAYC,cAAZ,CAAxB,CALyE,CAOzE;;AACA,MAAKyC,KAAL,EAAa;AACZ;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAchD,SAAS,CAAEC,KAAK,CAAE8C,KAAK,CAACE,OAAR,CAAP,CAAvB;AACA,GAXwE,CAazE;;;AACA,MAAKjC,iBAAL,EAAyB;AACxB6B,IAAAA,OAAO,CAACG,IAAR,CAAchD,SAAS,CAAEG,6BAA6B,CAAE,EAAF,EAAMa,iBAAN,CAA/B,CAAvB;AACA;;AAED,SAAO6B,OAAP;AACA;;AAED,MAAMK,OAAO,GAAG,YAAqC;AAAA,MAAnCC,KAAmC,uEAA3BzC,aAA2B;AAAA,MAAZ0C,MAAY;;AACpD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,cAAL;AAAqB;AACpB,cAAM;AAAE/C,UAAAA,cAAF;AAAkBD,UAAAA;AAAlB,YAA+B+C,MAAM,CAACjC,QAAP,CAAgBmC,GAArD;AAEA,eAAO,EACN,GAAGH,KADG;AAEN9C,UAAAA,QAFM;AAGNC,UAAAA,cAHM;AAINW,UAAAA,cAAc,EAAE2B,iBAAiB,CAAEvC,QAAF,EAAYC,cAAZ,EAA4B8C,MAAM,CAACjC,QAAP,CAAgBkB,MAAhB,CAAuBkB,QAAnD,CAJ3B;AAKNvC,UAAAA,iBAAiB,EAAEoC,MAAM,CAACjC,QAAP,CAAgBkB,MAAhB,CAAuBkB,QALpC;AAMNpC,UAAAA,QAAQ,EAAE,EACT,GAAGgC,KAAK,CAAChC,QADA;AAET,eAAGiC,MAAM,CAACjC,QAAP,CAAgBmC;AAFV;AANJ,SAAP;AAWA;;AAED,SAAK,qBAAL;AACC,aAAO,EACN,GAAGH,KADG;AAEN7C,QAAAA,cAAc,EAAE8C,MAAM,CAACI,OAFjB;AAGNvC,QAAAA,cAAc,EAAE2B,iBAAiB,CAAEO,KAAK,CAAC9C,QAAR,EAAkB+C,MAAM,CAACI,OAAzB,EAAkCL,KAAK,CAACnC,iBAAxC;AAH3B,OAAP;;AAMD,SAAK,iBAAL;AACC,aAAO,EACN,GAAGmC,KADG;AAENxC,QAAAA,UAAU,EAAEyC,MAAM,CAACzC;AAFb,OAAP;;AAKD,SAAK,mBAAL;AACC,aAAO,EACN,GAAGwC,KADG;AAENvC,QAAAA,gBAAgB,EAAEwC,MAAM,CAACK,MAFnB;AAGNC,QAAAA,iBAAiB,EAAE,KAHb;AAIN5C,QAAAA,gBAAgB,EAAE;AAJZ,OAAP;;AAOD,SAAK,oBAAL;AACC,aAAO,EACN,GAAGqC,KADG;AAENO,QAAAA,iBAAiB,EAAEN,MAAM,CAACK,MAFpB;AAGN3C,QAAAA,gBAAgB,EAAE;AAHZ,OAAP;;AAMD,SAAK,mBAAL;AACC,aAAO,EACN,GAAGqC,KADG;AAENvC,QAAAA,gBAAgB,EAAE,KAFZ;AAGN8C,QAAAA,iBAAiB,EAAE,KAHb;AAIN5C,QAAAA,gBAAgB,EAAEsC,MAAM,CAACK;AAJnB,OAAP;;AAOD,SAAK,aAAL;AACC,aAAO,EACN,GAAGN,KADG;AAENtC,QAAAA,SAAS,EAAEuC,MAAM,CAACvC;AAFZ,OAAP;;AAKD,SAAK,kBAAL;AACC,aAAO,EACN,GAAGsC,KADG;AAENpC,QAAAA,OAAO,EAAEqC,MAAM,CAACrC;AAFV,OAAP;;AAKD,SAAK,iBAAL;AACC,aAAO,EACN,GAAGoC,KADG;AAENjC,QAAAA,UAAU,EAAEkC,MAAM,CAAClC;AAFb,OAAP;AAlEF;;AAwEA,SAAOiC,KAAP;AACA,CA1ED;;AA4EA,eAAeD,OAAf","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { serialize, parse, createBlock, synchronizeBlocksWithTemplate } from '@wordpress/blocks';\n\nconst getPattern = ( patterns, currentPattern ) =>\n\tpatterns && patterns.find( ( item ) => item.name === currentPattern );\n\n/** @typedef {import('../../index').IsoSettings} IsoSettings */\n\n/**\n * Pattern type.\n * @typedef Pattern\n * @property {string} name - Name of the pattern.\n * @property {string} content - Content for the pattern.\n */\n\n/**\n * Editor mode\n * @typedef {('visual'|'text')} EditorMode\n */\n\n/**\n * The editor state object\n *\n * @typedef EditorState\n * @property {EditorMode} editorMode - whether in visual or code editing mode.\n * @property {boolean} isInserterOpened - whether the inserter is open.\n * @property {boolean} isListViewOpened - whether the list view is open.\n * @property {Pattern[]} patterns - array of patterns.\n * @property {string|null} currentPattern - current pattern name.\n * @property {string[]} ignoredContent - content to ignore when saving.\n * @property {object|null} gutenbergTemplate - the Gutenberg template\n * @property {boolean} isEditing - is this editor being used?\n * @property {boolean} isReady - is the editor ready?\n * @property {IsoSettings} settings - editor settings\n * @property {string} deviceType - current device type\n */\n\n/** @type EditorState */\nconst DEFAULT_STATE = {\n\t// Editor state\n\teditorMode: 'visual',\n\tisInserterOpened: false,\n\tisEditing: false,\n\tisListViewOpened: false,\n\tisReady: false,\n\n\tpatterns: [],\n\tcurrentPattern: null,\n\tgutenbergTemplate: null,\n\n\tignoredContent: [],\n\tdeviceType: 'Desktop',\n\n\tsettings: {\n\t\tpreferencesKey: null,\n\t\tpersistenceKey: null,\n\t\tblocks: {\n\t\t\tallowBlocks: [],\n\t\t\tdisallowBlocks: [],\n\t\t},\n\t\tdisallowEmbed: [],\n\t\tcustomStores: [],\n\t\ttoolbar: {\n\t\t\tinserter: true,\n\t\t\ttoc: false,\n\t\t\tundo: true,\n\t\t\tinspector: true,\n\t\t\tnavigation: false,\n\t\t\tdocumentInspector: false,\n\t\t\tselectorTool: false,\n\t\t},\n\t\tsidebar: {\n\t\t\tinspector: false,\n\t\t\tinserter: false,\n\t\t},\n\t\tmoreMenu: {\n\t\t\teditor: false,\n\t\t\tfullscreen: false,\n\t\t\tpreview: false,\n\t\t\ttopToolbar: false,\n\t\t},\n\t\tlinkMenu: [],\n\t\tcurrentPattern: null,\n\t\tpatterns: [],\n\t\tdefaultPreferences: {},\n\t\tallowApi: false,\n\t},\n};\n\n/**\n * Ignored content are pieces of HTML that we don't need to save. This could be, for example, an empty pattern.\n *\n * @param {Pattern[]} patterns - Array of patterns.\n * @param {string} currentPattern - Selected pattern name.\n * @param {object|null} gutenbergTemplate - Gutenberg template.\n * @returns {string[]} Array of ignored HTML strings.\n */\nfunction getIgnoredContent( patterns, currentPattern, gutenbergTemplate ) {\n\tconst ignored = [\n\t\tserialize( createBlock( 'core/paragraph' ) ),\n\t\tserialize( createBlock( 'core/paragraph', { className: '' } ) ),\n\t];\n\tconst found = getPattern( patterns, currentPattern );\n\n\t// If we're using a starter pattern then add the empty pattern to our ignored content list\n\tif ( found ) {\n\t\t// We parse and then serialize so it will better match the formatting from Gutenberg when saving content\n\t\tignored.push( serialize( parse( found.content ) ) );\n\t}\n\n\t// If we're using a Gutenberg template then add that to the ignored list\n\tif ( gutenbergTemplate ) {\n\t\tignored.push( serialize( synchronizeBlocksWithTemplate( [], gutenbergTemplate ) ) );\n\t}\n\n\treturn ignored;\n}\n\nconst reducer = ( state = DEFAULT_STATE, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'SETUP_EDITOR': {\n\t\t\tconst { currentPattern, patterns } = action.settings.iso;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpatterns,\n\t\t\t\tcurrentPattern,\n\t\t\t\tignoredContent: getIgnoredContent( patterns, currentPattern, action.settings.editor.template ),\n\t\t\t\tgutenbergTemplate: action.settings.editor.template,\n\t\t\t\tsettings: {\n\t\t\t\t\t...state.settings,\n\t\t\t\t\t...action.settings.iso,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase 'SET_CURRENT_PATTERN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPattern: action.pattern,\n\t\t\t\tignoredContent: getIgnoredContent( state.patterns, action.pattern, state.gutenbergTemplate ),\n\t\t\t};\n\n\t\tcase 'SET_EDITOR_MODE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\teditorMode: action.editorMode,\n\t\t\t};\n\n\t\tcase 'SET_INSERTER_OPEN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisInserterOpened: action.isOpen,\n\t\t\t\tisInspectorOpened: false,\n\t\t\t\tisListViewOpened: false,\n\t\t\t};\n\n\t\tcase 'SET_INSPECTOR_OPEN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisInspectorOpened: action.isOpen,\n\t\t\t\tisListViewOpened: false,\n\t\t\t};\n\n\t\tcase 'SET_LISTVIEW_OPEN':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisInserterOpened: false,\n\t\t\t\tisInspectorOpened: false,\n\t\t\t\tisListViewOpened: action.isOpen,\n\t\t\t};\n\n\t\tcase 'SET_EDITING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisEditing: action.isEditing,\n\t\t\t};\n\n\t\tcase 'SET_EDITOR_READY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisReady: action.isReady,\n\t\t\t};\n\n\t\tcase 'SET_DEVICE_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeviceType: action.deviceType,\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n"],"file":"reducer.js"}