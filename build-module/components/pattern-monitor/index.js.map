{"version":3,"file":"index.js","names":["useEffect","useRef","withDispatch","withSelect","compose","parse","PatternMonitor","props","currentPattern","updateBlocksWithoutUndo","previous","current","name","setTimeout","content","select","getCurrentPattern","dispatch"],"sources":["../../../src/components/pattern-monitor/index.js"],"sourcesContent":["// @ts-nocheck\n/**\n * WordPress dependencies\n */\n\nimport { useEffect, useRef } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { parse } from '@wordpress/blocks';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n/** @typedef {import('../../store/editor/reducer').Pattern} Pattern */\n\n/**\n * Update callback\n *\n * @callback OnUpdate\n * @param {object[]} blocks - Editor content to save\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {Object} props - Component props\n * @param {BlockEditorSettings} props.settings - Settings\n * @param {Pattern} props.currentPattern - Currently selected pattern\n * @param {OnUpdate} props.updateBlocksWithoutUndo - Callback to update blocks\n */\nfunction PatternMonitor( props ) {\n\tconst { currentPattern, updateBlocksWithoutUndo } = props;\n\tconst previous = useRef( null );\n\n\t// Monitor the current pattern and update the editor content if it changes\n\tuseEffect( () => {\n\t\tif ( currentPattern === null || previous.current === currentPattern ) {\n\t\t\t// @ts-ignore\n\t\t\tprevious.current = currentPattern;\n\t\t\treturn;\n\t\t}\n\n\t\t// @ts-ignore\n\t\tprevious.current = currentPattern.name;\n\t\tsetTimeout( () => {\n\t\t\tupdateBlocksWithoutUndo( parse( currentPattern.content ) );\n\t\t}, 0 );\n\t}, [ currentPattern ] );\n\n\treturn null;\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getCurrentPattern } = select( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tcurrentPattern: getCurrentPattern(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tupdateBlocksWithoutUndo,\n\t\t};\n\t} ),\n] )( PatternMonitor );\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AACtD,SAASC,YAAY,EAAEC,UAAU,QAAQ,iBAAiB;AAC1D,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,KAAK,QAAQ,mBAAmB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAc,CAAEC,KAAK,EAAG;EAChC,MAAM;IAAEC,cAAc;IAAEC;EAAwB,CAAC,GAAGF,KAAK;EACzD,MAAMG,QAAQ,GAAGT,MAAM,CAAE,IAAI,CAAE;;EAE/B;EACAD,SAAS,CAAE,MAAM;IAChB,IAAKQ,cAAc,KAAK,IAAI,IAAIE,QAAQ,CAACC,OAAO,KAAKH,cAAc,EAAG;MACrE;MACAE,QAAQ,CAACC,OAAO,GAAGH,cAAc;MACjC;IACD;;IAEA;IACAE,QAAQ,CAACC,OAAO,GAAGH,cAAc,CAACI,IAAI;IACtCC,UAAU,CAAE,MAAM;MACjBJ,uBAAuB,CAAEJ,KAAK,CAAEG,cAAc,CAACM,OAAO,CAAE,CAAE;IAC3D,CAAC,EAAE,CAAC,CAAE;EACP,CAAC,EAAE,CAAEN,cAAc,CAAE,CAAE;EAEvB,OAAO,IAAI;AACZ;AAEA,eAAeJ,OAAO,CAAE,CACvBD,UAAU,CAAIY,MAAM,IAAM;EACzB,MAAM;IAAEC;EAAkB,CAAC,GAAGD,MAAM,CAAE,iBAAiB,CAAE;EAEzD,OAAO;IACNP,cAAc,EAAEQ,iBAAiB;EAClC,CAAC;AACF,CAAC,CAAE,EACHd,YAAY,CAAIe,QAAQ,IAAM;EAC7B,MAAM;IAAER;EAAwB,CAAC,GAAGQ,QAAQ,CAAE,iBAAiB,CAAE;EAEjE,OAAO;IACNR;EACD,CAAC;AACF,CAAC,CAAE,CACH,CAAE,CAAEH,cAAc,CAAE"}