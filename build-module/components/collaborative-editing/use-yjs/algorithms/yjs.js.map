{"version":3,"file":"yjs.js","names":["yjs","diff","isEqual","applyHTMLDelta","richTextMapToHTML","sanitizeHTML","updateBlocksDoc","yDocBlocks","blocks","richTextHint","clientId","has","set","Map","order","get","Array","byClientId","currentOrder","toArray","orderDiff","simpleDiffArray","map","block","slice","index","remove","forEach","_clientId","insert","includes","delete","_block","innerBlocks","isPreexisting","richTexts","getKnownRichTextAttributes","attributeKey","updateRichText","newBlock","knownRichTextAttributes","attributeSet","Set","keys","add","newText","attributes","blockWithRichTexts","XmlText","undefined","richTextMap","oldText","updateCommentsDoc","commentsDoc","comments","comment","currentDoc","_id","isNewDoc","field","updateCommentRepliesDoc","replies","repliesDoc","reply","currentReplyDoc","updatePostDoc","doc","newPost","postDoc","getMap","title","commentsDocToArray","Object","entries","toJSON","id","commentDoc","type","content","createdAt","status","start","end","authorId","authorName","replyId","entryDoc","sort","a","b","blocksDocToArray","sanitize","richTextsAsStrings","from","reduce","acc","key","value","postDocToObject"],"sources":["../../../../../src/components/collaborative-editing/use-yjs/algorithms/yjs.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as yjs from 'yjs';\nimport * as diff from 'lib0/diff';\nimport { isEqual } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { applyHTMLDelta, richTextMapToHTML } from './rich-text';\nimport sanitizeHTML from './sanitize-html';\n\n/**\n * @typedef {Object} PostObject\n * @property {string} title\n * @property {Object[]} blocks\n * @property {Object[]} comments\n */\n\n/** @typedef {import('../yjs-doc').RichTextHint} RichTextHint */\n\n/**\n * Updates the block doc with the local blocks block changes.\n *\n * @param {yjs.Map} yDocBlocks Blocks doc.\n * @param {Array}   blocks     Updated blocks.\n * @param {RichTextHint} [richTextHint] Indication that a certain block attribute is a RichText, inferred from the current editor selection.\n * @param {string}  clientId   Current clientId.\n */\nexport function updateBlocksDoc( yDocBlocks, blocks, richTextHint, clientId = '' ) {\n\tif ( ! yDocBlocks.has( 'order' ) ) {\n\t\tyDocBlocks.set( 'order', new yjs.Map() );\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\tif ( ! order.has( clientId ) ) order.set( clientId, new yjs.Array() );\n\torder = order.get( clientId );\n\tif ( ! yDocBlocks.has( 'byClientId' ) ) {\n\t\tyDocBlocks.set( 'byClientId', new yjs.Map() );\n\t}\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\tconst currentOrder = order.toArray();\n\tconst orderDiff = diff.simpleDiffArray(\n\t\tcurrentOrder,\n\t\tblocks.map( ( block ) => block.clientId )\n\t);\n\tcurrentOrder\n\t\t.slice( orderDiff.index, orderDiff.remove )\n\t\t.forEach( ( _clientId ) => ! orderDiff.insert.includes( _clientId ) && byClientId.delete( _clientId ) );\n\torder.delete( orderDiff.index, orderDiff.remove );\n\torder.insert( orderDiff.index, orderDiff.insert );\n\n\tif ( ! yDocBlocks.has( 'richTexts' ) ) {\n\t\tyDocBlocks.set( 'richTexts', new yjs.Map() );\n\t}\n\n\tfor ( const _block of blocks ) {\n\t\tconst { innerBlocks, ...block } = _block;\n\t\tconst isPreexisting = byClientId.has( block.clientId );\n\n\t\tif ( ! isPreexisting || ! isEqual( byClientId.get( block.clientId ), block ) ) {\n\t\t\tconst richTexts = yDocBlocks.get( 'richTexts' );\n\n\t\t\tgetKnownRichTextAttributes( block.clientId, richTextHint, richTexts ).forEach( ( attributeKey ) => {\n\t\t\t\tupdateRichText( {\n\t\t\t\t\tnewBlock: block,\n\t\t\t\t\tattributeKey,\n\t\t\t\t\trichTexts,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tbyClientId.set( block.clientId, block );\n\t\t}\n\n\t\tupdateBlocksDoc( yDocBlocks, innerBlocks, richTextHint, block.clientId );\n\t}\n}\n\n/**\n * @param clientId\n * @param richTextHint\n * @param richTexts\n * @return {Set<string>}\n */\nfunction getKnownRichTextAttributes( clientId, richTextHint, richTexts ) {\n\tconst knownRichTextAttributes = richTexts.has( clientId ) && richTexts.get( clientId );\n\tconst attributeSet = knownRichTextAttributes ? new Set( knownRichTextAttributes.keys() ) : new Set();\n\tif ( richTextHint && clientId === richTextHint.clientId ) {\n\t\tattributeSet.add( richTextHint.attributeKey );\n\t}\n\treturn attributeSet;\n}\n\n/**\n * Updates the RichText value in the richTexts yMap using index-based manipulation.\n *\n * @param {Object} args\n * @param {Object} args.newBlock\n * @param {string} args.attributeKey\n * @param {yjs.Map} args.richTexts\n */\nexport function updateRichText( { newBlock, attributeKey, richTexts } ) {\n\tconst newText = newBlock.attributes[ attributeKey ];\n\n\tif ( ! richTexts.has( newBlock.clientId ) ) {\n\t\trichTexts.set( newBlock.clientId, new yjs.Map() );\n\t}\n\tconst blockWithRichTexts = richTexts.get( newBlock.clientId );\n\tif ( ! blockWithRichTexts.has( attributeKey ) ) {\n\t\tblockWithRichTexts.set(\n\t\t\tattributeKey,\n\t\t\tnew yjs.Map( [\n\t\t\t\t[ 'xmlText', new yjs.XmlText() ],\n\t\t\t\t[ 'multilineTag', undefined ],\n\t\t\t\t[ 'replacements', new yjs.Array() ],\n\t\t\t\t[ 'multilineWrapperReplacements', new yjs.Array() ],\n\t\t\t] )\n\t\t);\n\t}\n\n\tconst richTextMap = blockWithRichTexts.get( attributeKey );\n\tconst oldText = richTextMapToHTML( blockWithRichTexts.get( attributeKey ) );\n\tapplyHTMLDelta( oldText, newText, richTextMap );\n}\n\n/**\n * Updates the comments doc with the local comments changes.\n *\n * @param {yjs.Map} commentsDoc  comments doc.\n * @param {Object[]}  comments     Updated comments.\n */\nexport function updateCommentsDoc( commentsDoc, comments = [] ) {\n\tcomments.forEach( ( comment ) => {\n\t\tlet currentDoc = commentsDoc.get( comment._id );\n\t\tconst isNewDoc = ! currentDoc;\n\t\tif ( ! currentDoc ) {\n\t\t\tcommentsDoc.set( comment._id, new yjs.Map() );\n\t\t}\n\t\tcurrentDoc = commentsDoc.get( comment._id );\n\t\t// Update regular fields\n\t\t[ 'type', 'content', 'createdAt', 'status', 'start', 'end', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentDoc.get( field ) !== comment[ field ] ) {\n\t\t\t\tcurrentDoc.set( field, comment[ field ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( isNewDoc ) {\n\t\t\tcurrentDoc.set( 'replies', new yjs.Map() );\n\t\t}\n\n\t\tupdateCommentRepliesDoc( currentDoc.get( 'replies' ), comment.replies );\n\t} );\n}\n\n/**\n * Updates the replies doc with the local replies changes.\n *\n * @param {yjs.Map} repliesDoc  replies doc.\n * @param {Object[]}  replies     Updated replies.\n */\nexport function updateCommentRepliesDoc( repliesDoc, replies = [] ) {\n\treplies.forEach( ( reply ) => {\n\t\tlet currentReplyDoc = repliesDoc.get( reply._id );\n\t\tconst isNewDoc = ! currentReplyDoc;\n\t\tif ( ! currentReplyDoc ) {\n\t\t\trepliesDoc.set( reply._id, new yjs.Map() );\n\t\t}\n\t\tcurrentReplyDoc = repliesDoc.get( reply._id );\n\t\t[ 'content', 'createdAt', 'authorId', 'authorName' ].forEach( ( field ) => {\n\t\t\tif ( isNewDoc || currentReplyDoc.get( field ) !== reply[ field ] ) {\n\t\t\t\tcurrentReplyDoc.set( field, reply[ field ] );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Updates the post doc with the local post changes.\n *\n * @param {yjs.Doc} doc     Shared doc.\n * @param {PostObject}  newPost Updated post.\n * @param {RichTextHint} [richTextHint]\n */\nexport function updatePostDoc( doc, newPost, richTextHint ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tif ( postDoc.get( 'title' ) !== newPost.title ) {\n\t\tpostDoc.set( 'title', newPost.title );\n\t}\n\tif ( ! postDoc.get( 'blocks' ) ) {\n\t\tpostDoc.set( 'blocks', new yjs.Map() );\n\t}\n\tupdateBlocksDoc( postDoc.get( 'blocks' ), newPost.blocks || [], richTextHint );\n\tif ( ! postDoc.get( 'comments' ) ) {\n\t\tpostDoc.set( 'comments', new yjs.Map() );\n\t}\n\tupdateCommentsDoc( postDoc.get( 'comments' ), newPost.comments );\n}\n\n/**\n * Converts the comments doc into a comment list.\n *\n * @param {yjs.Map} commentsDoc Comments doc.\n * @return {Array} Comment list.\n */\nexport function commentsDocToArray( commentsDoc ) {\n\tif ( ! commentsDoc ) {\n\t\treturn [];\n\t}\n\n\treturn Object.entries( commentsDoc.toJSON() ).map( ( [ id, commentDoc ] ) => {\n\t\treturn {\n\t\t\t_id: id,\n\t\t\ttype: commentDoc.type,\n\t\t\tcontent: commentDoc.content,\n\t\t\tcreatedAt: commentDoc.createdAt,\n\t\t\tstatus: commentDoc.status,\n\t\t\tstart: commentDoc.start,\n\t\t\tend: commentDoc.end,\n\t\t\tauthorId: commentDoc.authorId,\n\t\t\tauthorName: commentDoc.authorName,\n\t\t\treplies: Object.entries( commentDoc.replies )\n\t\t\t\t.map( ( [ replyId, entryDoc ] ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: replyId,\n\t\t\t\t\t\tcontent: entryDoc.content,\n\t\t\t\t\t\tcreatedAt: entryDoc.createdAt,\n\t\t\t\t\t\tauthorId: entryDoc.authorId,\n\t\t\t\t\t\tauthorName: entryDoc.authorName,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.sort( ( a, b ) => a.createdAt - b.createdAt ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the block doc into a block list.\n *\n * @param {yjs.Map} yDocBlocks Block doc.\n * @param {Object} [opts]\n * @param {string}  [opts.clientId] Current block clientId.\n * @param {boolean}  [opts.sanitize] Whether to sanitize the block attribute values.\n *\n * @return {Array} Block list.\n */\nexport function blocksDocToArray( yDocBlocks, { clientId = '', sanitize = false } = {} ) {\n\tif ( ! yDocBlocks ) {\n\t\treturn [];\n\t}\n\tlet order = yDocBlocks.get( 'order' );\n\torder = order.get( clientId )?.toArray();\n\tif ( ! order ) return [];\n\tconst byClientId = yDocBlocks.get( 'byClientId' );\n\n\treturn order.map( ( _clientId ) => {\n\t\tconst richTextMap = yDocBlocks.get( 'richTexts' ).get( _clientId ) || new yjs.Map();\n\t\tconst richTextsAsStrings = Array.from( richTextMap.entries() ).reduce( ( acc, [ key, value ] ) => {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[ key ]: richTextMapToHTML( value ),\n\t\t\t};\n\t\t}, {} );\n\n\t\tconst attributes = {\n\t\t\t...byClientId.get( _clientId ).attributes,\n\t\t\t...richTextsAsStrings,\n\t\t};\n\n\t\tif ( sanitize ) {\n\t\t\tfor ( const key in attributes ) {\n\t\t\t\tattributes[ key ] = sanitizeHTML( attributes[ key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...byClientId.get( _clientId ),\n\t\t\tattributes,\n\t\t\tinnerBlocks: blocksDocToArray( yDocBlocks, { clientId: _clientId, sanitize } ),\n\t\t};\n\t} );\n}\n\n/**\n * Converts the post doc into a post object.\n *\n * @param {yjs.Doc} doc Shared doc.\n * @param {Object} [opts]\n * @param {boolean} [opts.sanitize]\n *\n * @return {PostObject} Post object.\n */\nexport function postDocToObject( doc, { sanitize = false } = {} ) {\n\tconst postDoc = doc.getMap( 'post' );\n\tconst blocks = blocksDocToArray( postDoc.get( 'blocks' ), { sanitize } );\n\tconst comments = commentsDocToArray( postDoc.get( 'comments' ) );\n\n\treturn {\n\t\ttitle: postDoc.get( 'title' ) || '',\n\t\tblocks,\n\t\tcomments,\n\t};\n}\n"],"mappings":"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"}