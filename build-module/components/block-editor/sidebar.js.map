{"version":3,"sources":["../../../src/components/block-editor/sidebar.js"],"names":["BlockInspector","store","blockEditorStore","cog","keyboardShortcutsStore","ComplementaryArea","interfaceStore","__","useSelect","SettingsHeader","Document","PluginSidebarEditPost","className","props","postTitle","shortcut","showIconLabels","select","getShortcutRepresentation","isFeatureActive","SettingsSidebar","documentInspector","sidebarName","keyboardShortcut","sidebar","getActiveComplementaryArea","includes","getBlockSelectionStart"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,cAAT,EAAyBC,KAAK,IAAIC,gBAAlC,QAA0D,yBAA1D;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASF,KAAK,IAAIG,sBAAlB,QAAgD,+BAAhD;AACA,SAASC,iBAAT,EAA4BJ,KAAK,IAAIK,cAArC,QAA2D,sBAA3D;AAEA;AACA;AACA;;AAEA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,SAASC,qBAAT,OAA0D;AAAA,MAA1B;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAA0B;AACzD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAA0CR,SAAS,CAAIS,MAAF,IAAc;AACxE,WAAO;AACNH,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAEE,MAAM,CAAEb,sBAAF,CAAN,CAAiCc,yBAAjC,CAA4D,+BAA5D,CAFJ;AAGNF,MAAAA,cAAc,EAAEC,MAAM,CAAE,iBAAF,CAAN,CAA4BE,eAA5B,CAA6C,gBAA7C;AAHV,KAAP;AAKA,GANwD,CAAzD;AAQA,SACC,cAAC,iBAAD;AACC,IAAA,cAAc,EAAGP,SADlB;AAEC,IAAA,SAAS,EAAC,mBAFX;AAGC,IAAA,gBAAgB,EAAGE,SAAS,IAAIP,EAAE,CAAE,YAAF,CAHnC;AAIC,IAAA,KAAK,EAAC,iBAJP;AAKC,IAAA,cAAc,EAAGQ,QALlB;AAMC,IAAA,cAAc,EAAGC;AANlB,KAOMH,KAPN,EADD;AAWA;;AAED,MAAMO,eAAe,GAAG,SAA4B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AACnD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAoCf,SAAS,CAAIS,MAAF,IAAc;AAClE,QAAIO,OAAO,GAAGP,MAAM,CAAEX,cAAF,CAAN,CAAyBmB,0BAAzB,CAAqD,iBAArD,CAAd;;AAEA,QAAK,CAAE,CAAE,oBAAF,EAAwB,iBAAxB,EAA4CC,QAA5C,CAAsDF,OAAtD,CAAP,EAAyE;AACxEA,MAAAA,OAAO,GAAG,oBAAV;;AAEA,UAAKP,MAAM,CAAEf,gBAAF,CAAN,CAA2ByB,sBAA3B,EAAL,EAA2D;AAC1DH,QAAAA,OAAO,GAAG,iBAAV;AACA;AACD;;AAED,UAAMT,QAAQ,GAAGE,MAAM,CAAEb,sBAAF,CAAN,CAAiCc,yBAAjC,CAA4D,+BAA5D,CAAjB;AACA,WAAO;AACNI,MAAAA,WAAW,EAAEE,OADP;AAEND,MAAAA,gBAAgB,EAAER;AAFZ,KAAP;AAIA,GAhBkD,EAgBhD,EAhBgD,CAAnD;AAkBA,SACC,cAAC,qBAAD;AACC,IAAA,SAAS,EAAC,aADX;AAEC,IAAA,UAAU,EAAGO,WAFd;AAGC,IAAA,MAAM,EAAG,cAAC,cAAD;AAAgB,MAAA,WAAW,EAAGA,WAA9B;AAA4C,MAAA,iBAAiB,EAAGD;AAAhE,MAHV;AAIC,IAAA,UAAU,EAAGd,EAAE,CAAE,gBAAF,CAJhB;AAKC,IAAA,eAAe,EAAC;AAChB;AAND;AAOC,IAAA,KAAK,EAAGA,EAAE,CAAE,UAAF,CAPX;AAQC,IAAA,cAAc,EAAGgB,gBARlB;AASC,IAAA,IAAI,EAAGpB,GATR;AAUC,IAAA,iBAAiB,EAAG;AAVrB,KAYGmB,WAAW,KAAK,oBAAhB,IAAwC,cAAC,QAAD,CAAU,IAAV,OAZ3C,EAaGA,WAAW,KAAK,iBAAhB,IAAqC,cAAC,cAAD,OAbxC,CADD;AAiBA,CApCD;;AAsCA,eAAeF,eAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { BlockInspector, store as blockEditorStore } from '@wordpress/block-editor';\nimport { cog } from '@wordpress/icons';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { ComplementaryArea, store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\nimport SettingsHeader from './sidebar-heading';\nimport Document from '../document';\n\nfunction PluginSidebarEditPost( { className, ...props } ) {\n\tconst { postTitle, shortcut, showIconLabels } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostTitle: '',\n\t\t\tshortcut: select( keyboardShortcutsStore ).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' ),\n\t\t\tshowIconLabels: select( 'isolated/editor' ).isFeatureActive( 'showIconLabels' ),\n\t\t};\n\t} );\n\n\treturn (\n\t\t<ComplementaryArea\n\t\t\tpanelClassName={ className }\n\t\t\tclassName=\"edit-post-sidebar\"\n\t\t\tsmallScreenTitle={ postTitle || __( '(no title)' ) }\n\t\t\tscope=\"isolated/editor\"\n\t\t\ttoggleShortcut={ shortcut }\n\t\t\tshowIconLabels={ showIconLabels }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n\nconst SettingsSidebar = ( { documentInspector }) => {\n\tconst { sidebarName, keyboardShortcut } = useSelect( ( select ) => {\n\t\tlet sidebar = select( interfaceStore ).getActiveComplementaryArea( 'isolated/editor' );\n\n\t\tif ( ! [ 'edit-post/document', 'edit-post/block' ].includes( sidebar ) ) {\n\t\t\tsidebar = 'edit-post/document';\n\n\t\t\tif ( select( blockEditorStore ).getBlockSelectionStart() ) {\n\t\t\t\tsidebar = 'edit-post/block';\n\t\t\t}\n\t\t}\n\n\t\tconst shortcut = select( keyboardShortcutsStore ).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' );\n\t\treturn {\n\t\t\tsidebarName: sidebar,\n\t\t\tkeyboardShortcut: shortcut,\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<PluginSidebarEditPost\n\t\t\tclassName=\"iso-sidebar\"\n\t\t\tidentifier={ sidebarName }\n\t\t\theader={ <SettingsHeader sidebarName={ sidebarName } documentInspector={ documentInspector } /> }\n\t\t\tcloseLabel={ __( 'Close settings' ) }\n\t\t\theaderClassName=\"edit-post-sidebar__panel-tabs\"\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\ttitle={ __( 'Settings' ) }\n\t\t\ttoggleShortcut={ keyboardShortcut }\n\t\t\ticon={ cog }\n\t\t\tisActiveByDefault={ false }\n\t\t>\n\t\t\t{ sidebarName === 'edit-post/document' && <Document.Slot /> }\n\t\t\t{ sidebarName === 'edit-post/block' && <BlockInspector /> }\n\t\t</PluginSidebarEditPost>\n\t);\n};\n\nexport default SettingsSidebar;\n"],"file":"sidebar.js"}