{"version":3,"file":"post-text-editor.js","names":["Textarea","__","Component","withSelect","withDispatch","withInstanceId","compose","parse","serialize","PostTextEditor","constructor","props","edit","bind","stopEditing","state","getDerivedStateFromProps","isDirty","value","event","target","onChange","setState","onPersist","render","instanceId","select","getBlocks","dispatch","updateBlocksWithoutUndo","content","blocks"],"sources":["../../../src/components/block-editor/post-text-editor.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { parse, serialize } from '@wordpress/blocks';\n\nexport class PostTextEditor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\t// @ts-ignore */}\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { instanceId } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n// @ts-ignore\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks } = select( 'isolated/editor' );\n\t\treturn {\n\t\t\tvalue: serialize( getBlocks() ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"],"mappings":"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"}