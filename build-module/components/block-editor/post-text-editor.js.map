{"version":3,"file":"post-text-editor.js","names":["Textarea","__","Component","withSelect","withDispatch","withInstanceId","compose","parse","serialize","PostTextEditor","constructor","props","edit","bind","stopEditing","state","getDerivedStateFromProps","isDirty","value","event","target","onChange","setState","onPersist","render","instanceId","select","getBlocks","dispatch","updateBlocksWithoutUndo","content","blocks"],"sources":["../../../src/components/block-editor/post-text-editor.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { parse, serialize } from '@wordpress/blocks';\n\nexport class PostTextEditor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\t// @ts-ignore */}\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { instanceId } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n// @ts-ignore\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getBlocks } = select( 'isolated/editor' );\n\t\treturn {\n\t\t\tvalue: serialize( getBlocks() ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateBlocksWithoutUndo } = dispatch( 'isolated/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tconst blocks = parse( content );\n\t\t\t\tupdateBlocksWithoutUndo( blocks );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"],"mappings":"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"}