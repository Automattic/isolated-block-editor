{"version":3,"file":"index.js","names":["__","useEffect","withDispatch","withSelect","useMemo","compose","getEditorSettings","EditorSetup","props","currentSettings","updateSettings","setupEditor","isEditing","topToolbar","setupCoreEditor","window","__editorAssets","undefined","styles","scripts","id","type","editor","reusableBlocks","select","settings","isFeatureActive","getBlockTypes","blockTypes","hasFixedToolbar","getEntityRecords","iso","defaultPreferences","fixedToolbar","__experimentalReusableBlocks","__experimentalFetchReusableBlocks","dispatch","updateEditorSettings","setupEditorState"],"sources":["../../../src/components/editor-setup/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\n\nimport getEditorSettings from './editor-settings';\n\n/** @typedef {import('../../index').BlockEditorSettings} BlockEditorSettings */\n\n/**\n * Settings callback\n *\n * @callback OnSettings\n * @param {BlockEditorSettings} settings\n */\n\n/**\n * Sets up Gutenberg and the Isolated Block Editor\n *\n * An initial setup is performed, and is then reset each time the editor is focussed. This ensures we are applying the right\n * settings for this particular editor.\n *\n * @param {Object} props - Component props\n * @param {BlockEditorSettings} props.currentSettings - Modified settings\n * @param {OnSettings} props.updateSettings - Update settings\n * @param {OnSettings} props.setupEditor - Set up the Gutenberg editor\n * @param {boolean} props.isEditing - Are we editing in this editor?\n * @param {boolean} props.topToolbar - Is the top toolbar enabled?\n */\nfunction EditorSetup( props ) {\n\t// @ts-ignore\n\tconst { currentSettings, updateSettings, setupEditor, isEditing, topToolbar, setupCoreEditor } = props;\n\n\t// This is the initial setup\n\tuseEffect( () => {\n\t\t// Ensure we always have a __editorAssets value - Gutenberg hardcoded assets\n\t\t// @ts-ignore\n\t\tif ( typeof window.__editorAssets === undefined ) {\n\t\t\t// @ts-ignore\n\t\t\twindow.__editorAssets = { styles: '', scripts: '' };\n\t\t}\n\n\t\t// Setup the Isolated Editor & Gutenberg\n\t\tsetupEditor( currentSettings );\n\n\t\t// And Gutenberg\n\t\tupdateSettings( currentSettings );\n\n\t\t// Set up the post entities with some dummy data, ensuring that anything that uses post entities can work\n\t\tsetupCoreEditor(\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\ttype: 'post',\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t}, [] );\n\n\t// Run whenever the editor is focussed, or the topToolbar setting or reusable blocks change\n\tuseEffect( () => {\n\t\tif ( ! isEditing ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup Gutenberg for this editor, but only when focussed. This swaps allowed blocks and other capabilities\n\t\tupdateSettings( currentSettings );\n\t}, [ isEditing, topToolbar, currentSettings?.editor?.reusableBlocks ] );\n\n\treturn null;\n}\n\nexport default compose( [\n\twithSelect( ( select, { settings } ) => {\n\t\tconst { isEditing, isFeatureActive } = select( 'isolated/editor' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hasFixedToolbar = isFeatureActive( 'fixedToolbar' );\n\t\tconst reusableBlocks = select( 'core' ).getEntityRecords( 'postType', 'wp_block' );\n\n\t\treturn {\n\t\t\tisEditing: isEditing(),\n\t\t\ttopToolbar: hasFixedToolbar,\n\t\t\tcurrentSettings: useMemo(\n\t\t\t\t() => ( {\n\t\t\t\t\t...settings,\n\n\t\t\t\t\teditor: {\n\t\t\t\t\t\t...getEditorSettings(\n\t\t\t\t\t\t\tsettings.editor,\n\t\t\t\t\t\t\tsettings.iso,\n\t\t\t\t\t\t\tblockTypes,\n\t\t\t\t\t\t\t// Use the default preference, if set, otherwise use the feature\n\t\t\t\t\t\t\tsettings.iso?.defaultPreferences?.fixedToolbar !== undefined\n\t\t\t\t\t\t\t\t? settings.iso?.defaultPreferences?.fixedToolbar\n\t\t\t\t\t\t\t\t: hasFixedToolbar\n\t\t\t\t\t\t),\n\n\t\t\t\t\t\t// Reusable blocks\n\t\t\t\t\t\t__experimentalReusableBlocks: [],\n\t\t\t\t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// ...( settings.editor?.__experimentalReusableBlocks === false\n\t\t\t\t\t\t// \t? {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: false,\n\t\t\t\t\t\t// \t  }\n\t\t\t\t\t\t// \t: {\n\t\t\t\t\t\t// \t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t\t\t\t// \t\t\t__experimentalFetchReusableBlocks: registry.dispatch( 'core/editor' )\n\t\t\t\t\t\t// \t\t\t\t.__experimentalFetchReusableBlocks,\n\t\t\t\t\t\t// \t  } ),\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t\t[ settings, blockTypes, hasFixedToolbar, reusableBlocks ]\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updateEditorSettings, setupEditorState: setupCoreEditor } = dispatch( 'core/editor' );\n\t\tconst { updateSettings } = dispatch( 'core/block-editor' );\n\t\tconst { setupEditor } = dispatch( 'isolated/editor' );\n\n\t\treturn {\n\t\t\tsetupEditor,\n\t\t\tsetupCoreEditor,\n\t\t\tupdateSettings: ( { editor } ) => {\n\t\t\t\tupdateSettings( editor );\n\t\t\t\tupdateEditorSettings( editor );\n\t\t\t},\n\t\t};\n\t} ),\n] )( EditorSetup );\n"],"mappings":"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"}