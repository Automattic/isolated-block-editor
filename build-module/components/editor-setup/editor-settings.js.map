{"version":3,"file":"editor-settings.js","names":["getAllowedBlockTypes","blockSettings","allBlockTypes","allowBlocks","length","map","block","name","getDisallowedBlocks","disallowBlocks","getEditorSettings","editorSettings","isoSettings","hasFixedToolbar","blocks","allowedBlockTypes","filter","blockName","indexOf"],"sources":["../../../src/components/editor-setup/editor-settings.js"],"sourcesContent":["/** @typedef {import('../../index').EditorSettings} EditorSettings */\n/** @typedef {import('../../index').IsoSettings} IsoSettings */\n\n/**\n * Get all the allowed block types, either from the settings, or all available blocks\n *\n * @param {{allowBlocks: string[]}} blockSettings - settings for available blocks\n * @param {object[]} allBlockTypes - All available blocks\n * @return {string[]}\n */\nfunction getAllowedBlockTypes( blockSettings, allBlockTypes ) {\n\tif ( blockSettings && blockSettings.allowBlocks && blockSettings.allowBlocks.length > 0 ) {\n\t\treturn blockSettings.allowBlocks;\n\t}\n\n\t// No allow blocks - return all blocks\n\treturn allBlockTypes.map( ( block ) => block.name );\n}\n\n/**\n * Get all the disallowed block types, either from the settings, or all available blocks\n *\n * @param {{disallowBlocks: string[]}} blockSettings - settings for disallowed blocks\n * @return {string[]}\n */\nfunction getDisallowedBlocks( blockSettings ) {\n\tif ( blockSettings && blockSettings.disallowBlocks ) {\n\t\treturn blockSettings.disallowBlocks;\n\t}\n\n\t// No blocks disallowed\n\treturn [];\n}\n\n/**\n * Get editor settings\n *\n * @param {EditorSettings} editorSettings - Editor settings\n * @param {IsoSettings} isoSettings\n * @param {object[]} allBlockTypes - All available blocks\n * @param {boolean} hasFixedToolbar - Do we need a fixed toolbar?\n * @return {EditorSettings}\n */\nexport default function getEditorSettings( editorSettings, isoSettings, allBlockTypes, hasFixedToolbar ) {\n\t// @ts-ignore\n\tconst disallowBlocks = getDisallowedBlocks( isoSettings.blocks );\n\n\treturn {\n\t\t...editorSettings,\n\t\thasFixedToolbar,\n\t\t// @ts-ignore\n\t\tallowedBlockTypes: getAllowedBlockTypes( isoSettings.blocks, allBlockTypes ).filter(\n\t\t\t( blockName ) => disallowBlocks.indexOf( blockName ) === -1\n\t\t),\n\t};\n}\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,CAAEC,aAAa,EAAEC,aAAa,EAAG;EAC7D,IAAKD,aAAa,IAAIA,aAAa,CAACE,WAAW,IAAIF,aAAa,CAACE,WAAW,CAACC,MAAM,GAAG,CAAC,EAAG;IACzF,OAAOH,aAAa,CAACE,WAAW;EACjC;;EAEA;EACA,OAAOD,aAAa,CAACG,GAAG,CAAIC,KAAK,IAAMA,KAAK,CAACC,IAAI,CAAE;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmB,CAAEP,aAAa,EAAG;EAC7C,IAAKA,aAAa,IAAIA,aAAa,CAACQ,cAAc,EAAG;IACpD,OAAOR,aAAa,CAACQ,cAAc;EACpC;;EAEA;EACA,OAAO,EAAE;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiB,CAAEC,cAAc,EAAEC,WAAW,EAAEV,aAAa,EAAEW,eAAe,EAAG;EACxG;EACA,MAAMJ,cAAc,GAAGD,mBAAmB,CAAEI,WAAW,CAACE,MAAM,CAAE;EAEhE,OAAO;IACN,GAAGH,cAAc;IACjBE,eAAe;IACf;IACAE,iBAAiB,EAAEf,oBAAoB,CAAEY,WAAW,CAACE,MAAM,EAAEZ,aAAa,CAAE,CAACc,MAAM,CAChFC,SAAS,IAAMR,cAAc,CAACS,OAAO,CAAED,SAAS,CAAE,KAAK,CAAC,CAAC;EAE7D,CAAC;AACF"}