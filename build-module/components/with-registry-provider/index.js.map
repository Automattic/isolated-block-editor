{"version":3,"file":"index.js","names":["useState","useEffect","withRegistry","createRegistry","RegistryProvider","plugins","createHigherOrderComponent","storeConfig","blockEditorStoreConfig","coreEditorStoreConfig","applyMiddlewares","reusableStore","applyDefaultSettings","decoratedEditor","interfaceStore","registries","STORE_NAME","withRegistryProvider","WrappedComponent","props","registry","settings","additionalProps","defaultSettings","persistenceKey","preferencesKey","defaultPreferences","customStores","iso","subRegistry","setSubRegistry","newRegistry","use","persistence","store","registerStore","blockEditorStore","persist","editorStore","selectors","select","map","push","name","config","cleanup","filter","item"],"sources":["../../../src/components/with-registry-provider/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { withRegistry, createRegistry, RegistryProvider, plugins } from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { storeConfig as blockEditorStoreConfig } from '@wordpress/block-editor';\nimport { storeConfig as coreEditorStoreConfig } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport storeConfig from '../../store';\nimport applyMiddlewares from '../../store/middlewares';\nimport reusableStore from './reusable-store';\nimport applyDefaultSettings from '../default-settings';\nimport decoratedEditor from '../../store/core-editor';\nimport interfaceStore from './interface-store';\n\n// Keep track of the registries we create so we can release them after the editor instance is removed\nlet registries = [];\n\nconst STORE_NAME = 'isolated/editor';\n\n/**\n * This is the core of having a multi-editor Gutenberg experience.\n *\n * We create a sub registry that contains copies of `core/block-editor`, `core/editor`, and STORE_NAME. These are specific to the editor instance and\n * provide the content for each editor, as well as overriding some core functions\n *\n * The key `persistenceKey` from the settings is used as the `localStorage` key to save Gutenberg preferences\n */\nconst withRegistryProvider = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\twithRegistry( ( props ) => {\n\t\t\tconst { registry, settings, ...additionalProps } = props;\n\t\t\tconst defaultSettings = applyDefaultSettings( settings );\n\t\t\tconst { persistenceKey, preferencesKey, defaultPreferences, customStores = [] } = defaultSettings.iso || {};\n\t\t\tconst [ subRegistry, setSubRegistry ] = useState( null );\n\n\t\t\tuseEffect( () => {\n\t\t\t\t// Create a new registry for this editor. We have the STORE_NAME for storing blocks and other data\n\t\t\t\t// and a duplicate of `core/block-editor` for storing block selections\n\t\t\t\tconst newRegistry = createRegistry(\n\t\t\t\t\t{\n\t\t\t\t\t\t'core/reusable-blocks': reusableStore,\n\t\t\t\t\t\t'core/interface': interfaceStore,\n\t\t\t\t\t},\n\t\t\t\t\tregistry\n\t\t\t\t);\n\n\t\t\t\t// Enable the persistence plugin so we use settings in `localStorage`\n\t\t\t\tif ( persistenceKey ) {\n\t\t\t\t\tnewRegistry.use( plugins.persistence, {\n\t\t\t\t\t\tpersistenceKey,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Create our custom store\n\t\t\t\tconst store = newRegistry.registerStore(\n\t\t\t\t\tSTORE_NAME,\n\t\t\t\t\tstoreConfig( preferencesKey, defaultPreferences )\n\t\t\t\t);\n\n\t\t\t\t// Create the core/block-editor store separatley as we need the persistence plugin to be active\n\t\t\t\tconst blockEditorStore = newRegistry.registerStore( 'core/block-editor', {\n\t\t\t\t\t...blockEditorStoreConfig,\n\t\t\t\t\tpersist: [ 'preferences' ],\n\t\t\t\t} );\n\n\t\t\t\t// Duplicate the core/editor store so we can decorate it\n\t\t\t\tconst editorStore = newRegistry.registerStore( 'core/editor', {\n\t\t\t\t\t...coreEditorStoreConfig,\n\t\t\t\t\tselectors: {\n\t\t\t\t\t\t...coreEditorStoreConfig.selectors,\n\t\t\t\t\t\t...decoratedEditor( coreEditorStoreConfig.selectors, newRegistry.select ),\n\t\t\t\t\t},\n\t\t\t\t\tpersist: [ 'preferences' ],\n\t\t\t\t} );\n\n\t\t\t\t// Create any custom stores inside our registry\n\t\t\t\tcustomStores.map( ( store ) => {\n\t\t\t\t\tregistries.push( newRegistry.registerStore( store.name, store.config ) );\n\t\t\t\t} );\n\n\t\t\t\tregistries.push( store );\n\t\t\t\tregistries.push( blockEditorStore );\n\t\t\t\tregistries.push( editorStore );\n\n\t\t\t\t// This should be removed after the refactoring of the effects to controls.\n\t\t\t\tapplyMiddlewares( store );\n\t\t\t\tsetSubRegistry( newRegistry );\n\n\t\t\t\treturn function cleanup() {\n\t\t\t\t\tregistries = registries.filter( ( item ) => item !== store );\n\t\t\t\t};\n\t\t\t}, [ registry ] );\n\n\t\t\tif ( ! subRegistry ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t\t<WrappedComponent { ...additionalProps } settings={ defaultSettings } />\n\t\t\t\t</RegistryProvider>\n\t\t\t);\n\t\t} ),\n\t'withRegistryProvider'\n);\n\nexport default withRegistryProvider;\n"],"mappings":"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"}