{"version":3,"file":"controls.js","names":["isReusableBlock","createBlock","parse","serialize","createRegistryControl","__","convertBlockToStatic","clientId","type","convertBlocksToReusable","clientIds","deleteReusableBlock","id","controls","CONVERT_BLOCK_TO_STATIC","registry","oldBlock","select","getBlock","reusableBlock","getEditedEntityRecord","attributes","ref","newBlocks","content","dispatch","replaceBlocks","CONVERT_BLOCKS_TO_REUSABLE","title","getBlocksByClientId","status","updatedRecord","saveEntityRecord","newBlock","reusableBlocksStore","__experimentalSetEditingReusableBlock","DELETE_REUSABLE_BLOCK","allBlocks","getBlocks","associatedBlocks","filter","block","associatedBlockClientIds","map","length","removeBlocks","deleteEntityRecord"],"sources":["../../../../src/components/with-registry-provider/reusable-store/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isReusableBlock, createBlock, parse, serialize } from '@wordpress/blocks';\nimport { createRegistryControl } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Convert a reusable block to a static block effect handler\n *\n * @param {string}  clientId Block ID.\n * @return {Object} control descriptor.\n */\nexport function convertBlockToStatic( clientId ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCK_TO_STATIC',\n\t\tclientId,\n\t};\n}\n\n/**\n * Convert a static block to a reusable block effect handler\n *\n * @param {Array}  clientIds Block IDs.\n * @return {Object} control descriptor.\n */\nexport function convertBlocksToReusable( clientIds ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCKS_TO_REUSABLE',\n\t\tclientIds,\n\t};\n}\n\n/**\n * Deletes a reusable block.\n *\n * @param {string} id Reusable block ID.\n * @return {Object} control descriptor.\n */\nexport function deleteReusableBlock( id ) {\n\treturn {\n\t\ttype: 'DELETE_REUSABLE_BLOCK',\n\t\tid,\n\t};\n}\n\nconst controls = {\n\tCONVERT_BLOCK_TO_STATIC: createRegistryControl( ( registry ) => ( { clientId } ) => {\n\t\tconst oldBlock = registry.select( 'core/block-editor' ).getBlock( clientId );\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord( 'postType', 'wp_block', oldBlock.attributes.ref );\n\n\t\tconst newBlocks = parse( reusableBlock.content );\n\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( oldBlock.clientId, newBlocks );\n\t} ),\n\n\tCONVERT_BLOCKS_TO_REUSABLE: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { clientIds } ) {\n\t\t\t\tconst reusableBlock = {\n\t\t\t\t\ttitle: __( 'Untitled Reusable Block' ),\n\t\t\t\t\tcontent: serialize( registry.select( 'core/block-editor' ).getBlocksByClientId( clientIds ) ),\n\t\t\t\t\tstatus: 'publish',\n\t\t\t\t};\n\n\t\t\t\tconst updatedRecord = await registry\n\t\t\t\t\t.dispatch( 'core' )\n\t\t\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\t\tref: updatedRecord.id,\n\t\t\t\t} );\n\t\t\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( clientIds, newBlock );\n\t\t\t\tregistry\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\t.dispatch( reusableBlocksStore )\n\t\t\t\t\t.__experimentalSetEditingReusableBlock( newBlock.clientId, true );\n\t\t\t}\n\t),\n\n\tDELETE_REUSABLE_BLOCK: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { id } ) {\n\t\t\t\tconst reusableBlock = registry.select( 'core' ).getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t\t\t\t// Don't allow a reusable block with a temporary ID to be deleted\n\t\t\t\tif ( ! reusableBlock ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove any other blocks that reference this reusable block\n\t\t\t\tconst allBlocks = registry.select( 'core/block-editor' ).getBlocks();\n\t\t\t\tconst associatedBlocks = allBlocks.filter(\n\t\t\t\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t\t\t\t);\n\t\t\t\tconst associatedBlockClientIds = associatedBlocks.map( ( block ) => block.clientId );\n\n\t\t\t\t// Remove the parsed block.\n\t\t\t\tif ( associatedBlockClientIds.length ) {\n\t\t\t\t\tregistry.dispatch( 'core/block-editor' ).removeBlocks( associatedBlockClientIds );\n\t\t\t\t}\n\n\t\t\t\tawait registry.dispatch( 'core' ).deleteEntityRecord( 'postType', 'wp_block', id );\n\t\t\t}\n\t),\n};\n\nexport default controls;\n"],"mappings":"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"}