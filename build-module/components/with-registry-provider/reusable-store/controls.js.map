{"version":3,"file":"controls.js","names":["isReusableBlock","createBlock","parse","serialize","createRegistryControl","__","convertBlockToStatic","clientId","type","convertBlocksToReusable","clientIds","deleteReusableBlock","id","controls","CONVERT_BLOCK_TO_STATIC","registry","oldBlock","select","getBlock","reusableBlock","getEditedEntityRecord","attributes","ref","newBlocks","content","dispatch","replaceBlocks","CONVERT_BLOCKS_TO_REUSABLE","title","getBlocksByClientId","status","updatedRecord","saveEntityRecord","newBlock","reusableBlocksStore","__experimentalSetEditingReusableBlock","DELETE_REUSABLE_BLOCK","allBlocks","getBlocks","associatedBlocks","filter","block","associatedBlockClientIds","map","length","removeBlocks","deleteEntityRecord"],"sources":["../../../../src/components/with-registry-provider/reusable-store/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isReusableBlock, createBlock, parse, serialize } from '@wordpress/blocks';\nimport { createRegistryControl } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Convert a reusable block to a static block effect handler\n *\n * @param {string}  clientId Block ID.\n * @return {Object} control descriptor.\n */\nexport function convertBlockToStatic( clientId ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCK_TO_STATIC',\n\t\tclientId,\n\t};\n}\n\n/**\n * Convert a static block to a reusable block effect handler\n *\n * @param {Array}  clientIds Block IDs.\n * @return {Object} control descriptor.\n */\nexport function convertBlocksToReusable( clientIds ) {\n\treturn {\n\t\ttype: 'CONVERT_BLOCKS_TO_REUSABLE',\n\t\tclientIds,\n\t};\n}\n\n/**\n * Deletes a reusable block.\n *\n * @param {string} id Reusable block ID.\n * @return {Object} control descriptor.\n */\nexport function deleteReusableBlock( id ) {\n\treturn {\n\t\ttype: 'DELETE_REUSABLE_BLOCK',\n\t\tid,\n\t};\n}\n\nconst controls = {\n\tCONVERT_BLOCK_TO_STATIC: createRegistryControl( ( registry ) => ( { clientId } ) => {\n\t\tconst oldBlock = registry.select( 'core/block-editor' ).getBlock( clientId );\n\t\tconst reusableBlock = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord( 'postType', 'wp_block', oldBlock.attributes.ref );\n\n\t\tconst newBlocks = parse( reusableBlock.content );\n\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( oldBlock.clientId, newBlocks );\n\t} ),\n\n\tCONVERT_BLOCKS_TO_REUSABLE: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { clientIds } ) {\n\t\t\t\tconst reusableBlock = {\n\t\t\t\t\ttitle: __( 'Untitled Reusable Block' ),\n\t\t\t\t\tcontent: serialize( registry.select( 'core/block-editor' ).getBlocksByClientId( clientIds ) ),\n\t\t\t\t\tstatus: 'publish',\n\t\t\t\t};\n\n\t\t\t\tconst updatedRecord = await registry\n\t\t\t\t\t.dispatch( 'core' )\n\t\t\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\t\tref: updatedRecord.id,\n\t\t\t\t} );\n\t\t\t\tregistry.dispatch( 'core/block-editor' ).replaceBlocks( clientIds, newBlock );\n\t\t\t\tregistry\n\t\t\t\t\t// @ts-ignore */}\n\t\t\t\t\t.dispatch( reusableBlocksStore )\n\t\t\t\t\t.__experimentalSetEditingReusableBlock( newBlock.clientId, true );\n\t\t\t}\n\t),\n\n\tDELETE_REUSABLE_BLOCK: createRegistryControl(\n\t\t( registry ) =>\n\t\t\tasync function ( { id } ) {\n\t\t\t\tconst reusableBlock = registry.select( 'core' ).getEditedEntityRecord( 'postType', 'wp_block', id );\n\n\t\t\t\t// Don't allow a reusable block with a temporary ID to be deleted\n\t\t\t\tif ( ! reusableBlock ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove any other blocks that reference this reusable block\n\t\t\t\tconst allBlocks = registry.select( 'core/block-editor' ).getBlocks();\n\t\t\t\tconst associatedBlocks = allBlocks.filter(\n\t\t\t\t\t( block ) => isReusableBlock( block ) && block.attributes.ref === id\n\t\t\t\t);\n\t\t\t\tconst associatedBlockClientIds = associatedBlocks.map( ( block ) => block.clientId );\n\n\t\t\t\t// Remove the parsed block.\n\t\t\t\tif ( associatedBlockClientIds.length ) {\n\t\t\t\t\tregistry.dispatch( 'core/block-editor' ).removeBlocks( associatedBlockClientIds );\n\t\t\t\t}\n\n\t\t\t\tawait registry.dispatch( 'core' ).deleteEntityRecord( 'postType', 'wp_block', id );\n\t\t\t}\n\t),\n};\n\nexport default controls;\n"],"mappings":"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"}