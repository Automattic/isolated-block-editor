{"version":3,"file":"selectors.js","names":["createRegistrySelector","deprecated","store","preferencesStore","getActiveComplementaryArea","select","state","scope","isComplementaryAreaVisible","get","undefined","complementaryAreas","isItemPinned","item","pinnedItems","isFeatureActive","featureName","since","alternative"],"sources":["../../../../src/components/with-registry-provider/interface-store/selectors.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Returns the complementary area that is active in a given scope.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Item scope.\n *\n * @return {string | null | undefined} The complementary area that is active in the given scope.\n */\nexport const getActiveComplementaryArea = createRegistrySelector(\n\t( select ) => ( state, scope ) => {\n\t\tconst isComplementaryAreaVisible = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'isComplementaryAreaVisible'\n\t\t);\n\n\t\t// Return `undefined` to indicate that the user has never toggled\n\t\t// visibility, this is the vanilla default. Other code relies on this\n\t\t// nuance in the return value.\n\t\tif ( isComplementaryAreaVisible === undefined ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Return `null` to indicate the user hid the complementary area.\n\t\tif ( !isComplementaryAreaVisible ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn state?.complementaryAreas?.[ scope ];\n\t}\n);\n\n/**\n * Returns a boolean indicating if an item is pinned or not.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Scope.\n * @param {string} item  Item to check.\n *\n * @return {boolean} True if the item is pinned and false otherwise.\n */\nexport const isItemPinned = createRegistrySelector(\n\t( select ) => ( state, scope, item ) => {\n\t\tconst pinnedItems = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'pinnedItems'\n\t\t);\n\t\treturn pinnedItems?.[ item ] ?? true;\n\t}\n);\n\n/**\n * Returns a boolean indicating whether a feature is active for a particular\n * scope.\n *\n * @param {Object} state       The store state.\n * @param {string} scope       The scope of the feature (e.g. core/edit-post).\n * @param {string} featureName The name of the feature.\n *\n * @return {boolean} Is the feature enabled?\n */\nexport const isFeatureActive = createRegistrySelector(\n\t( select ) => ( state, scope, featureName ) => {\n\t\tdeprecated(\n\t\t\t`select( 'core/interface' ).isFeatureActive( scope, featureName )`,\n\t\t\t{\n\t\t\t\tsince: '6.0',\n\t\t\t\talternative: `select( 'core/preferences' ).get( scope, featureName )`,\n\t\t\t}\n\t\t);\n\n\t\treturn !!select( preferencesStore ).get( scope, featureName );\n\t}\n);\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,sBAAsB,QAAQ,iBAAiB;AACxD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,wBAAwB;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,0BAA0B,GAAGJ,sBAAsB,CAC7DK,MAAM,IAAM,CAAEC,KAAK,EAAEC,KAAK,KAAM;EAAA;EACjC,MAAMC,0BAA0B,GAAGH,MAAM,CAAEF,gBAAgB,CAAE,CAACM,GAAG,CAChEF,KAAK,EACL,4BAA4B,CAC5B;;EAED;EACA;EACA;EACA,IAAKC,0BAA0B,KAAKE,SAAS,EAAG;IAC/C,OAAOA,SAAS;EACjB;;EAEA;EACA,IAAK,CAACF,0BAA0B,EAAG;IAClC,OAAO,IAAI;EACZ;EAEA,OAAOF,KAAK,aAALA,KAAK,gDAALA,KAAK,CAAEK,kBAAkB,0DAAzB,sBAA6BJ,KAAK,CAAE;AAC5C,CAAC,CACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,YAAY,GAAGZ,sBAAsB,CAC/CK,MAAM,IAAM,CAAEC,KAAK,EAAEC,KAAK,EAAEM,IAAI,KAAM;EAAA;EACvC,MAAMC,WAAW,GAAGT,MAAM,CAAEF,gBAAgB,CAAE,CAACM,GAAG,CACjDF,KAAK,EACL,aAAa,CACb;EACD,4BAAOO,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAID,IAAI,CAAE,iEAAI,IAAI;AACrC,CAAC,CACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,eAAe,GAAGf,sBAAsB,CAClDK,MAAM,IAAM,CAAEC,KAAK,EAAEC,KAAK,EAAES,WAAW,KAAM;EAC9Cf,UAAU,CACR,kEAAiE,EAClE;IACCgB,KAAK,EAAE,KAAK;IACZC,WAAW,EAAG;EACf,CAAC,CACD;EAED,OAAO,CAAC,CAACb,MAAM,CAAEF,gBAAgB,CAAE,CAACM,GAAG,CAAEF,KAAK,EAAES,WAAW,CAAE;AAC9D,CAAC,CACD"}