{"version":3,"sources":["../../../../src/components/block-editor-toolbar/header-toolbar/index.js"],"names":["useViewportMatch","useSelect","useDispatch","__","_x","ToolbarItem","Button","Popover","NavigableToolbar","BlockNavigationDropdown","__experimentalLibrary","Library","ToolSelector","TableOfContents","plus","listView","useRef","useCallback","store","keyboardShortcutsStore","EditorHistoryRedo","EditorHistoryUndo","preventDefault","event","HeaderToolbar","props","inserterButton","setIsInserterOpened","setIsListViewOpened","isMobileViewport","hasFixedToolbar","hasPeers","isInserterEnabled","isTextModeEnabled","showIconLabels","previewDeviceType","isInserterOpened","isListViewOpen","listViewShortcut","select","hasInserterItems","getBlockRootClientId","getBlockSelectionEnd","isListViewOpened","getShortcutRepresentation","isFeatureActive","getEditorMode","getEditorSettings","richEditingEnabled","isLargeViewport","isWideViewport","inserter","toc","navigation","undo","undoSetting","selectorTool","settings","iso","toolbar","inserterInSidebar","sidebar","displayBlockToolbar","toolbarAriaLabel","openInserter","toggleListView","current","undefined"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { ToolbarItem, Button, Popover } from '@wordpress/components';\nimport {\n\tNavigableToolbar,\n\tBlockNavigationDropdown,\n\t__experimentalLibrary as Library,\n\tToolSelector,\n} from '@wordpress/block-editor';\nimport { TableOfContents } from '@wordpress/editor';\nimport { plus, listView } from '@wordpress/icons';\nimport { useRef, useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport EditorHistoryRedo from './redo';\nimport EditorHistoryUndo from './undo';\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n};\n\nfunction HeaderToolbar( props ) {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened, setIsListViewOpened } = useDispatch( 'isolated/editor' );\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst {\n\t\thasFixedToolbar,\n\t\thasPeers,\n\t\tisInserterEnabled,\n\t\tisTextModeEnabled,\n\t\tshowIconLabels,\n\t\tpreviewDeviceType,\n\t\tisInserterOpened,\n\t\tisListViewOpen,\n\t\tlistViewShortcut\n\t} = useSelect( ( select ) => {\n\t\tconst { hasInserterItems, getBlockRootClientId, getBlockSelectionEnd } = select( 'core/block-editor' );\n\t\tconst { isListViewOpened } = select( 'isolated/editor' );\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\n\t\treturn {\n\t\t\thasFixedToolbar: select( 'isolated/editor' ).isFeatureActive( 'fixedToolbar' ),\n\t\t\thasPeers: select( 'isolated/editor' ).hasPeers(),\n\t\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\t\tisInserterEnabled:\n\t\t\t\tselect( 'isolated/editor' ).getEditorMode() === 'visual' &&\n\t\t\t\tselect( 'core/editor' ).getEditorSettings().richEditingEnabled &&\n\t\t\t\thasInserterItems( getBlockRootClientId( getBlockSelectionEnd() ) ),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tisTextModeEnabled: select( 'isolated/editor' ).getEditorMode() === 'text',\n\t\t\tpreviewDeviceType: 'Desktop',\n\t\t\tisInserterOpened: select( 'isolated/editor' ).isInserterOpened(),\n\t\t\tshowIconLabels: false, // Not implemented yet\n\t\t\tlistViewShortcut: getShortcutRepresentation(\n\t\t\t\t'core/edit-post/toggle-list-view'\n\t\t\t),\n\t\t};\n\t}, [] );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\tconst { inserter, toc, navigation, undo: undoSetting, selectorTool } = props.settings.iso.toolbar;\n\tconst inserterInSidebar = props.settings?.iso?.sidebar?.inserter || false;\n\tconst undo = undoSetting && ! hasPeers;\n\tconst displayBlockToolbar = ! isLargeViewport || previewDeviceType !== 'Desktop' || hasFixedToolbar;\n\tconst toolbarAriaLabel = displayBlockToolbar\n\t\t? /* translators: accessibility text for the editor toolbar when Top Toolbar is on */\n\t\t  __( 'Document and block tools' )\n\t\t: /* translators: accessibility text for the editor toolbar when Top Toolbar is off */\n\t\t  __( 'Document tools' );\n\tconst openInserter = useCallback( () => {\n\t\tif ( isInserterOpened ) {\n\t\t\t// Focusing the inserter button closes the inserter popover\n\t\t\t// @ts-ignore\n\t\t\tsetIsInserterOpened( false );\n\t\t} else {\n\t\t\tsetIsInserterOpened( true );\n\t\t}\n\t}, [ isInserterOpened, setIsInserterOpened ] );\n\n\tconst toggleListView = useCallback(\n\t\t() => setIsListViewOpened( ! isListViewOpen ),\n\t\t[ setIsListViewOpened, isListViewOpen ]\n\t);\n\n\treturn (\n\t\t<NavigableToolbar className=\"edit-post-header-toolbar\" aria-label={ toolbarAriaLabel }>\n\t\t\t{ ( inserter || undo || navigation || toc || selectorTool ) && (\n\t\t\t\t<div className=\"edit-post-header-toolbar__left\">\n\t\t\t\t\t{ inserter && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__inserter-toggle\"\n\t\t\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\t\t\tonClick={ openInserter }\n\t\t\t\t\t\t\tdisabled={ ! isInserterEnabled }\n\t\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\t\t\tcharacters. */\n\t\t\t\t\t\t\tlabel={ _x( 'Toggle block inserter', 'Generic label for block inserter button' ) }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isInserterOpened && ! inserterInSidebar && (\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tposition=\"bottom right\"\n\t\t\t\t\t\t\tonClose={ () => setIsInserterOpened( false ) }\n\t\t\t\t\t\t\tanchorRef={ inserterButton.current }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Library\n\t\t\t\t\t\t\t\tshowMostUsedBlocks={ false }\n\t\t\t\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\t\tif ( isMobileViewport ) {\n\t\t\t\t\t\t\t\t\t\tsetIsInserterOpened( false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ selectorTool && <ToolSelector /> }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ undo && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ navigation && ! inserterInSidebar && (\n\t\t\t\t\t\t<ToolbarItem as={ BlockNavigationDropdown } isDisabled={ isTextModeEnabled } />\n\t\t\t\t\t) }\n\t\t\t\t\t{ navigation && inserterInSidebar && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-post-header-toolbar__list-view-toggle\"\n\t\t\t\t\t\t\ticon={ listView }\n\t\t\t\t\t\t\tdisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\t\t\tlabel={ __( 'List View' ) }\n\t\t\t\t\t\t\tonClick={ toggleListView }\n\t\t\t\t\t\t\tshortcut={ listViewShortcut }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ toc && (\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ TableOfContents }\n\t\t\t\t\t\t\thasOutlineItemsDisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\trepositionDropdown={ showIconLabels && ! isWideViewport }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default HeaderToolbar;\n"],"file":"index.js"}